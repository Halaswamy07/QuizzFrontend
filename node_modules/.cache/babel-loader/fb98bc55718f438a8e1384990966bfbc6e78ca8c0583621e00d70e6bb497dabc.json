{"ast":null,"code":"import React,{useEffect,useState}from'react';import styles from'../QandAnsType/Style.module.css';import DeleteForeverIcon from'@mui/icons-material/DeleteForever';import CloseIcon from'@mui/icons-material/Close';import QuizLinkPopUp from'../QuizLink/QuizLinkPopUp';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function QandAnsPopUp(_ref){let{closePopUp,sendQuizName}=_ref;const[selectedOption,setSelectedOption]=useState('');const[textOptions,setTextOptions]=useState(['','']);const[imageOptions,setImageOptions]=useState(['','']);const[textAndImgOptions,setTextAndImgOptions]=useState(['','']);const[newQuiz,setnewQuiz]=useState([]);const[showQuizLink,setShowQuizLink]=useState(false);const[textAndImgTextOptions,setTextAndImgTextOptions]=useState(['','']);const[textAndImgImageOptions,setTextAndImgImageOptions]=useState(['','']);// const [myNewData, setMyNewData] = useState(['', '']);\nconst[questions,setQuestions]=useState({text:'',imageURL:'',textandimageURL:''});// const [createdQuizData, setCreatedQuizData] = useState([]);\nconst updateQuestion=(option,value)=>{setQuestions(prevQuestions=>({...prevQuestions,[option]:value}));};///////-------FOR TIME------------\nconst[totalTime,setTotalTime]=useState({newTime:0});///////-------FOR TIME------------\nconst[textQuizData,setTextQuizData]=useState({quest:'',options:['',''],correctOption:''// Rename to correctOption\n// time: 0,\n});const[imageQuizData,setImageQuizData]=useState({quest:'',options:['',''],correctOption:''// Rename to correctOption\n// time: 0,\n});const[textandImageQuizData,setTextandImageQuizData]=useState({quest:'',options:['',''],optionsImage:['',''],correctOption:''// Rename to correctOption\n// time: 0,\n});const handleTextDelete=index=>{let updatedOptions=[...textOptions];updatedOptions.splice(index,1);setTextOptions(updatedOptions);};const handleImageDelete=index=>{let updatedOption=[...imageOptions];updatedOption.splice(index,1);setImageOptions(updatedOption);};const handleTextAndImageDelete=index=>{let updatedOption=[...textAndImgOptions];let updatedTextOption=[...textAndImgTextOptions];let updatedImageOption=[...textAndImgImageOptions];updatedOption.splice(index,1);updatedTextOption.splice(index,1);updatedImageOption.splice(index,1);setTextAndImgOptions(updatedOption);setTextAndImgTextOptions(updatedTextOption);setTextAndImgImageOptions(updatedImageOption);};// const handleTimer = (sec) => {\n//   // Check the selected option and update the corresponding state\n//   switch (selectedOption) {\n//     case 'text':\n//       setTextQuizData({ ...textQuizData, time: sec });\n//       console.log(\"Selected time for textQuizData:\", sec);\n//       break;\n//     case 'imageURL':\n//       setImageQuizData({ ...imageQuizData, time: sec });\n//       break;\n//     case 'textandimageURL':\n//       setTextandImageQuizData({ ...textandImageQuizData, time: sec });\n//       break;\n//     default:\n//       console.warn(`Unhandled selectedOption: ${selectedOption}`);\n//       // You can throw an error, log a warning, or set a default behavior here\n//       break;\n//   }\n// }\n// ======================= IN TRIAL FOR TIME START\nconst handleTimer=sec=>{// Check the selected option and update the corresponding state\nswitch(selectedOption){case'text':setTotalTime({...totalTime,newTime:sec});console.log(\"Selected time for textQuizData:\",sec);break;case'imageURL':setTotalTime({...totalTime,newTime:sec});break;case'textandimageURL':setTotalTime({...totalTime,newTime:sec});break;default:console.warn(`Unhandled selectedOption: ${selectedOption}`);// You can throw an error, log a warning, or set a default behavior here\nbreak;}};// ====================== IN TRIAL FOR TIME START\nconst handleTextRadioChange=index=>{setTextQuizData({...textQuizData,correctOption:textOptions[index]});console.log(\"kk\",textQuizData);};const handleImageRadioChange=index=>{setImageQuizData({...imageQuizData,correctOption:imageOptions[index]});console.log(\"kk\",imageQuizData);};const handleTextAndImageRadioChange=index=>{setTextandImageQuizData({...textandImageQuizData,correctOption:textAndImgTextOptions[index]});console.log(\"Selected value:\",textandImageQuizData);};useEffect(()=>{console.log(\"Updated textQuizData:\",textQuizData);console.log(\"Updated imageQuizData:\",imageQuizData);console.log(\"Updated textandImageQuizData:\",textandImageQuizData);},[textQuizData,imageQuizData,textandImageQuizData]);const closeQandA=()=>{closePopUp(false);};const handleOptionChange=value=>{// setSelectedOption(value);\ndebugger;// Set the current question for the selected option type\nupdateQuestion(selectedOption,questions[selectedOption]||'');setSelectedOption(value);};const handleTextChange=(index,value)=>{const updatedOptions=[...textOptions];updatedOptions[index]=value;setTextOptions(updatedOptions);};const handleImageUrlChange=(index,value)=>{// Regular expression to check if the value is a valid URL\nconst urlRegex=/^(ftp|http|https):\\/\\/[^ \"]+$/;// Check if the value is a valid URL\nif(!urlRegex.test(value)){// Display an error or handle the case where the input is not a valid URL\nalert('Please enter a valid URL.');return;}const updatedOptions=[...imageOptions];updatedOptions[index]=value;setImageOptions(updatedOptions);};const handleNewTextChange=(index,value)=>{const updatedOptions=[...textAndImgTextOptions];updatedOptions[index]=value;setTextAndImgTextOptions(updatedOptions);console.log(\"Mydata\",textAndImgTextOptions);};const handleNewImageChange=(index,value)=>{// Regular expression to check if the value is a valid URL\nconst urlRegex=/^(ftp|http|https):\\/\\/[^ \"]+$/;// Check if the value is a valid URL\nif(!urlRegex.test(value)){// Display an error or handle the case where the input is not a valid URL\nalert('Please enter a valid URL.');return;}const updatedOptions=[...textAndImgImageOptions];updatedOptions[index]=value;setTextAndImgImageOptions(updatedOptions);console.log(\"MyImagedata\",textAndImgImageOptions);};const handleAddOption=()=>{if(selectedOption==='text'&&textOptions.length<4){setTextOptions(prevOptions=>[...prevOptions,'']);}else if(selectedOption==='imageURL'&&imageOptions.length<4){setImageOptions(prevImgOptions=>[...prevImgOptions,'']);}else if(selectedOption==='textandimageURL'&&textAndImgOptions.length<4){setTextAndImgOptions(prevTextAndImgOptions=>[...prevTextAndImgOptions,'']);setTextAndImgTextOptions(prevTextAndImgTextOptions=>[...prevTextAndImgTextOptions,'']);setTextAndImgImageOptions(prevTextAndImgImageOptions=>[...prevTextAndImgImageOptions,'']);}};const handleCreateNewQuiz=()=>{if(newQuiz.length<4){setnewQuiz(prevOptions=>[...prevOptions,prevOptions.length+1]);}};const renderOptions=()=>{if(selectedOption==='text'){return textOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",name:\"correctOption\",checked:textQuizData.correctOption===option,onChange:()=>handleTextRadioChange(index)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Text\",className:styles.inputText,value:option,onChange:e=>handleTextChange(index,e.target.value)}),textOptions.length>2&&index>1&&/*#__PURE__*/_jsx(DeleteForeverIcon,{className:styles.deleteIcon,onClick:()=>handleTextDelete(index)})]},index));}else if(selectedOption==='imageURL'){return imageOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",name:\"correctOption\",checked:imageQuizData.correctOption===option,onChange:()=>handleImageRadioChange(index)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Image URL\",className:styles.inputText,value:option,onChange:e=>handleImageUrlChange(index,e.target.value)}),imageOptions.length>2&&index>1&&/*#__PURE__*/_jsx(DeleteForeverIcon,{className:styles.deleteIcon,onClick:()=>handleImageDelete(index)})]},index));}else if(selectedOption==='textandimageURL'){return textAndImgOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:styles.textImageButtons,children:[/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",name:\"correctOption\"// checked={textandImageQuizData.correctOption === option}\n,checked:textandImageQuizData.correctOption===textAndImgTextOptions[index],onChange:()=>handleTextAndImageRadioChange(index)}),/*#__PURE__*/_jsx(\"input\",{className:styles.inputTextAndImage,type:\"text\",placeholder:\"Text\",value:textAndImgTextOptions[index],onChange:e=>handleNewTextChange(index,e.target.value)}),/*#__PURE__*/_jsx(\"input\",{className:styles.inputTextAndImage,type:\"text\",placeholder:\"Image URL\",value:textAndImgImageOptions[index]||'',onChange:e=>handleNewImageChange(index,e.target.value)}),textAndImgOptions.length>2&&index>1&&/*#__PURE__*/_jsx(DeleteForeverIcon,{className:styles.deleteIcon,onClick:()=>handleTextAndImageDelete(index)})]},index));}return null;};// const handleQuizLink = () => {\n//   setShowQuizLink(true);\n//   // closePollType();\n// };\nconst handleClosePopUp=flag=>{setShowQuizLink(flag);closeQandA();};const handleCreateQuiz=async()=>{// Validate question input\nif(!questions[selectedOption]||!questions[selectedOption].trim()){// Alert or handle the case where the question input is not filled\nalert('Please enter a question.');return;}// Validate fields based on the selected option type\nif(selectedOption==='text'){// Validate text options\nif(textOptions.some(option=>!option.trim())){// Alert or handle the case where a text option is not filled\nalert('Please fill in all text options.');return;}// Validate correct option\nif(!textQuizData.correctOption.trim()){// Alert or handle the case where the correct option is not selected\nalert('Please select the correct text option.');return;}}else if(selectedOption==='imageURL'){// Validate image options\nif(imageOptions.some(option=>!option.trim())){// Alert or handle the case where an image option is not filled\nalert('Please fill in all image options.');return;}// Validate correct option\nif(!imageQuizData.correctOption.trim()){// Alert or handle the case where the correct option is not selected\nalert('Please select the correct image option.');return;}}else if(selectedOption==='textandimageURL'){// Validate text and image options\nif(textAndImgTextOptions.some(option=>!option.trim())||textAndImgImageOptions.some(option=>!option.trim())){// Alert or handle the case where a text or image option is not filled\nalert('Please fill in all text and image options.');return;}// Validate correct option\nif(!textandImageQuizData.correctOption.trim()){// Alert or handle the case where the correct option is not selected\nalert('Please select the correct text and image option.');return;}}const currentDateAndTime=new Date();debugger;const finalQuizCreatedData={quizName:sendQuizName,typeText:'text',questionText:questions.text,optionsText:textOptions,correctOptionText:textQuizData.correctOption,// timeText: textQuizData.time,\ntypeImg:'imageURL',questionImg:questions.imageURL,optionsImg:imageOptions,correctOptionImg:imageQuizData.correctOption,// timeImg: imageQuizData.time,\ntypeTxtImg:'textandimageURL',questionTxtImg:questions.textandimageURL,optionsTxtImg:textAndImgTextOptions,optionsImageTxtImg:textAndImgImageOptions,correctOptionTxtImg:textandImageQuizData.correctOption,// timeTxtImg: textandImageQuizData.time,\ncurrentDateAndTime:currentDateAndTime.toISOString(),// Add current date and time\ntotalTime:totalTime.newTime};// setCreatedQuizData((prevData) => [...prevData, finalQuizCreatedData]); // Append to the existing array\nconsole.log(\"finalQuizCreatedData\",finalQuizCreatedData);// Call the API directly with the single object\ntry{const response=await axios.post(`${process.env.REACT_APP_API_URL}/api/create/quiz`,finalQuizCreatedData);console.log(\"Api Response\",response.data);}catch(error){console.error('Error posting data to API:',error);}setQuestions({text:\"\",imageURL:\"\",textandimageURL:\"\"});setTextOptions([\"\",\"\"]);setImageOptions([\"\",\"\"]);setTextQuizData({quest:\"\",options:[\"\",\"\"],correctOption:\"\",time:0});setImageQuizData({quest:\"\",options:[\"\",\"\"],correctOption:\"\",time:0});setTextandImageQuizData({quest:\"\",options:[\"\",\"\"],optionsImage:[\"\",\"\"],correctOption:\"\",time:0});// setTextAndImgTextOptions([\"\", \"\"]);\n// setTextAndImgImageOptions([\"\", \"\"]);\nsetTextAndImgTextOptions(new Array(textAndImgOptions.length).fill(\"\"));setTextAndImgImageOptions(new Array(textAndImgOptions.length).fill(\"\"));setShowQuizLink(true);};const handleDeleteQuiz=index=>{let updatedNewQuiz=[...newQuiz];updatedNewQuiz.splice(index,1);setnewQuiz(updatedNewQuiz);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.overlay,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.parent,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.addButton,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.upperButton,children:[/*#__PURE__*/_jsx(\"button\",{children:\"1\"}),newQuiz.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{children:item+1}),index>-1&&/*#__PURE__*/_jsx(CloseIcon,{className:styles.closeIcon,onClick:()=>handleDeleteQuiz(index)})]},index)),newQuiz.length<4&&/*#__PURE__*/_jsx(\"button\",{className:styles.addQuestion,onClick:handleCreateNewQuiz,children:\"+\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Max 5 questions\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.inputParent,children:/*#__PURE__*/_jsx(\"input\",{className:styles.input,placeholder:\"QuestionAndAnswer\",name:\"question\",value:questions[selectedOption]||'',onChange:e=>{// Update the question for the currently selected option type\nupdateQuestion(selectedOption,e.target.value);}})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttonContainer,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Option Type\"}),/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",value:\"text\",checked:selectedOption==='text',onChange:()=>handleOptionChange('text')}),/*#__PURE__*/_jsx(\"label\",{children:\"Text\"}),/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",value:\"imageURL\",checked:selectedOption==='imageURL',onChange:()=>handleOptionChange('imageURL')}),/*#__PURE__*/_jsx(\"label\",{children:\"Image URL\"}),/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",value:\"textandimageURL\",checked:selectedOption==='textandimageURL',onChange:()=>handleOptionChange('textandimageURL')}),/*#__PURE__*/_jsx(\"label\",{children:\"Text and Image URL\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.typeSelectContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.childOneContainer,children:[renderOptions(),/*#__PURE__*/_jsx(\"div\",{className:styles.subChildContainer,children:/*#__PURE__*/_jsx(\"button\",{onClick:handleAddOption,children:\"Add option\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.childTwoContainer,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Timer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTimer(0),children:\"Off\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTimer(5),children:\"5 sec\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTimer(10),children:\"10 sec\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttonContainer,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.cancelButton,onClick:closeQandA,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.createButton,onClick:handleCreateQuiz,children:\"Create Quiz\"})]})]})}),showQuizLink&&/*#__PURE__*/_jsx(QuizLinkPopUp,{closePopUp:handleClosePopUp})]});}export default QandAnsPopUp;","map":{"version":3,"names":["React","useEffect","useState","styles","DeleteForeverIcon","CloseIcon","QuizLinkPopUp","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QandAnsPopUp","_ref","closePopUp","sendQuizName","selectedOption","setSelectedOption","textOptions","setTextOptions","imageOptions","setImageOptions","textAndImgOptions","setTextAndImgOptions","newQuiz","setnewQuiz","showQuizLink","setShowQuizLink","textAndImgTextOptions","setTextAndImgTextOptions","textAndImgImageOptions","setTextAndImgImageOptions","questions","setQuestions","text","imageURL","textandimageURL","updateQuestion","option","value","prevQuestions","totalTime","setTotalTime","newTime","textQuizData","setTextQuizData","quest","options","correctOption","imageQuizData","setImageQuizData","textandImageQuizData","setTextandImageQuizData","optionsImage","handleTextDelete","index","updatedOptions","splice","handleImageDelete","updatedOption","handleTextAndImageDelete","updatedTextOption","updatedImageOption","handleTimer","sec","console","log","warn","handleTextRadioChange","handleImageRadioChange","handleTextAndImageRadioChange","closeQandA","handleOptionChange","handleTextChange","handleImageUrlChange","urlRegex","test","alert","handleNewTextChange","handleNewImageChange","handleAddOption","length","prevOptions","prevImgOptions","prevTextAndImgOptions","prevTextAndImgTextOptions","prevTextAndImgImageOptions","handleCreateNewQuiz","renderOptions","map","children","className","radio","type","name","checked","onChange","placeholder","inputText","e","target","deleteIcon","onClick","textImageButtons","inputTextAndImage","handleClosePopUp","flag","handleCreateQuiz","trim","some","currentDateAndTime","Date","finalQuizCreatedData","quizName","typeText","questionText","optionsText","correctOptionText","typeImg","questionImg","optionsImg","correctOptionImg","typeTxtImg","questionTxtImg","optionsTxtImg","optionsImageTxtImg","correctOptionTxtImg","toISOString","response","post","process","env","REACT_APP_API_URL","data","error","time","Array","fill","handleDeleteQuiz","updatedNewQuiz","overlay","parent","addButton","upperButton","item","closeIcon","addQuestion","inputParent","input","buttonContainer","typeSelectContainer","childOneContainer","subChildContainer","childTwoContainer","cancelButton","createButton"],"sources":["E:/cuvette-quizz-app/cuvette-frontend-quiz-app/src/CreateQuiz/QandAnsType/QandAnsPopUp.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from '../QandAnsType/Style.module.css';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport QuizLinkPopUp from '../QuizLink/QuizLinkPopUp';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction QandAnsPopUp({ closePopUp, sendQuizName }) {\r\n\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [textOptions, setTextOptions] = useState(['', '']);\r\n  const [imageOptions, setImageOptions] = useState(['', '']);\r\n  const [textAndImgOptions, setTextAndImgOptions] = useState(['', '']);\r\n  const [newQuiz, setnewQuiz] = useState([]);\r\n  const [showQuizLink, setShowQuizLink] = useState(false);\r\n\r\n  const [textAndImgTextOptions, setTextAndImgTextOptions] = useState(['', '']);\r\n  const [textAndImgImageOptions, setTextAndImgImageOptions] = useState(['', '']);\r\n\r\n\r\n  // const [myNewData, setMyNewData] = useState(['', '']);\r\n\r\n\r\n  const [questions, setQuestions] = useState({\r\n    text: '',\r\n    imageURL: '',\r\n    textandimageURL: '',\r\n  });\r\n\r\n  // const [createdQuizData, setCreatedQuizData] = useState([]);\r\n\r\n  const updateQuestion = (option, value) => {\r\n    setQuestions((prevQuestions) => ({\r\n      ...prevQuestions,\r\n      [option]: value,\r\n    }));\r\n  };\r\n\r\n  ///////-------FOR TIME------------\r\n\r\n  const [totalTime, setTotalTime] = useState({\r\n    newTime:0\r\n  });\r\n\r\n  ///////-------FOR TIME------------\r\n\r\n  const [textQuizData, setTextQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    // time: 0,\r\n  });\r\n\r\n\r\n  const [imageQuizData, setImageQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    // time: 0,\r\n  });\r\n\r\n\r\n  const [textandImageQuizData, setTextandImageQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    optionsImage: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    // time: 0,\r\n  });\r\n\r\n\r\n  const handleTextDelete = (index) => {\r\n    let updatedOptions = [...textOptions];\r\n    updatedOptions.splice(index, 1);\r\n    setTextOptions(updatedOptions);\r\n  }\r\n\r\n\r\n  const handleImageDelete = (index) => {\r\n    let updatedOption = [...imageOptions];\r\n    updatedOption.splice(index, 1);\r\n    setImageOptions(updatedOption);\r\n  }\r\n\r\n\r\n  const handleTextAndImageDelete = (index) => {\r\n    let updatedOption = [...textAndImgOptions];\r\n    let updatedTextOption = [...textAndImgTextOptions];\r\n    let updatedImageOption = [...textAndImgImageOptions];\r\n\r\n\r\n    updatedOption.splice(index, 1);\r\n    updatedTextOption.splice(index, 1);\r\n    updatedImageOption.splice(index, 1);\r\n\r\n\r\n    setTextAndImgOptions(updatedOption);\r\n    setTextAndImgTextOptions(updatedTextOption);\r\n    setTextAndImgImageOptions(updatedImageOption);\r\n  }\r\n\r\n\r\n  // const handleTimer = (sec) => {\r\n  //   // Check the selected option and update the corresponding state\r\n  //   switch (selectedOption) {\r\n  //     case 'text':\r\n  //       setTextQuizData({ ...textQuizData, time: sec });\r\n  //       console.log(\"Selected time for textQuizData:\", sec);\r\n  //       break;\r\n  //     case 'imageURL':\r\n  //       setImageQuizData({ ...imageQuizData, time: sec });\r\n  //       break;\r\n  //     case 'textandimageURL':\r\n  //       setTextandImageQuizData({ ...textandImageQuizData, time: sec });\r\n  //       break;\r\n  //     default:\r\n  //       console.warn(`Unhandled selectedOption: ${selectedOption}`);\r\n  //       // You can throw an error, log a warning, or set a default behavior here\r\n  //       break;\r\n  //   }\r\n  // }\r\n\r\n\r\n// ======================= IN TRIAL FOR TIME START\r\n\r\nconst handleTimer = (sec) => {\r\n  // Check the selected option and update the corresponding state\r\n  switch (selectedOption) {\r\n    case 'text':\r\n      setTotalTime({ ...totalTime, newTime: sec });\r\n      console.log(\"Selected time for textQuizData:\", sec);\r\n      break;\r\n    case 'imageURL':\r\n      setTotalTime({ ...totalTime, newTime: sec });\r\n      break;\r\n    case 'textandimageURL':\r\n      setTotalTime({ ...totalTime, newTime: sec });\r\n      break;\r\n    default:\r\n      console.warn(`Unhandled selectedOption: ${selectedOption}`);\r\n      // You can throw an error, log a warning, or set a default behavior here\r\n      break;\r\n  }\r\n}\r\n\r\n// ====================== IN TRIAL FOR TIME START\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleTextRadioChange = (index) => {\r\n    setTextQuizData({ ...textQuizData, correctOption: textOptions[index] });\r\n    console.log(\"kk\", textQuizData);\r\n  };\r\n\r\n\r\n  const handleImageRadioChange = (index) => {\r\n    setImageQuizData({ ...imageQuizData, correctOption: imageOptions[index] });\r\n    console.log(\"kk\", imageQuizData);\r\n  };\r\n\r\n\r\n  const handleTextAndImageRadioChange = (index) => {\r\n\r\n\r\n    setTextandImageQuizData({ ...textandImageQuizData, correctOption: textAndImgTextOptions[index] })\r\n    console.log(\"Selected value:\", textandImageQuizData);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"Updated textQuizData:\", textQuizData);\r\n    console.log(\"Updated imageQuizData:\", imageQuizData);\r\n    console.log(\"Updated textandImageQuizData:\", textandImageQuizData);\r\n  }, [textQuizData, imageQuizData, textandImageQuizData])\r\n\r\n\r\n\r\n\r\n  const closeQandA = () => {\r\n    closePopUp(false);\r\n  };\r\n\r\n\r\n  const handleOptionChange = (value) => {\r\n    // setSelectedOption(value);\r\n    debugger\r\n    // Set the current question for the selected option type\r\n    updateQuestion(selectedOption, questions[selectedOption] || '');\r\n\r\n    setSelectedOption(value);\r\n  };\r\n\r\n\r\n  const handleTextChange = (index, value) => {\r\n    const updatedOptions = [...textOptions];\r\n    updatedOptions[index] = value;\r\n    setTextOptions(updatedOptions);\r\n  };\r\n\r\n\r\n  const handleImageUrlChange = (index, value) => {\r\n\r\n    // Regular expression to check if the value is a valid URL\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\n    // Check if the value is a valid URL\r\n    if (!urlRegex.test(value)) {\r\n      // Display an error or handle the case where the input is not a valid URL\r\n      alert('Please enter a valid URL.');\r\n      return;\r\n    }\r\n\r\n    const updatedOptions = [...imageOptions];\r\n    updatedOptions[index] = value;\r\n    setImageOptions(updatedOptions);\r\n  };\r\n\r\n  const handleNewTextChange = (index, value) => {\r\n    const updatedOptions = [...textAndImgTextOptions];\r\n    updatedOptions[index] = value;\r\n    setTextAndImgTextOptions(updatedOptions);\r\n    console.log(\"Mydata\", textAndImgTextOptions);\r\n  };\r\n\r\n\r\n  const handleNewImageChange = (index, value) => {\r\n\r\n    // Regular expression to check if the value is a valid URL\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\n    // Check if the value is a valid URL\r\n    if (!urlRegex.test(value)) {\r\n      // Display an error or handle the case where the input is not a valid URL\r\n      alert('Please enter a valid URL.');\r\n      return;\r\n    }\r\n\r\n    const updatedOptions = [...textAndImgImageOptions];\r\n    updatedOptions[index] = value;\r\n    setTextAndImgImageOptions(updatedOptions);\r\n    console.log(\"MyImagedata\", textAndImgImageOptions);\r\n\r\n\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    if (selectedOption === 'text' && textOptions.length < 4) {\r\n      setTextOptions((prevOptions) => [...prevOptions, '']);\r\n    }\r\n    else if (selectedOption === 'imageURL' && imageOptions.length < 4) {\r\n      setImageOptions((prevImgOptions) => [...prevImgOptions, '']);\r\n    } else if (selectedOption === 'textandimageURL' && textAndImgOptions.length < 4) {\r\n      setTextAndImgOptions((prevTextAndImgOptions) => [...prevTextAndImgOptions, '']);\r\n      setTextAndImgTextOptions((prevTextAndImgTextOptions) => [...prevTextAndImgTextOptions, '']);\r\n      setTextAndImgImageOptions((prevTextAndImgImageOptions) => [...prevTextAndImgImageOptions, '']);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCreateNewQuiz = () => {\r\n    if (newQuiz.length < 4) {\r\n      setnewQuiz((prevOptions) => [...prevOptions, prevOptions.length + 1]);\r\n    }\r\n  };\r\n\r\n\r\n  const renderOptions = () => {\r\n    if (selectedOption === 'text') {\r\n      return textOptions.map((option, index) => (\r\n        <div key={index}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={textQuizData.correctOption === option}\r\n            onChange={() => handleTextRadioChange(index)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Text\"\r\n            className={styles.inputText}\r\n            value={option}\r\n            onChange={(e) => handleTextChange(index, e.target.value)}\r\n          />\r\n          {textOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleTextDelete(index)} />}\r\n        </div>\r\n      ));\r\n    } else if (selectedOption === 'imageURL') {\r\n      return imageOptions.map((option, index) => (\r\n        <div key={index}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={imageQuizData.correctOption === option}\r\n            onChange={() => handleImageRadioChange(index)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Image URL\"\r\n            className={styles.inputText}\r\n            value={option}\r\n            onChange={(e) => handleImageUrlChange(index, e.target.value)}\r\n          />\r\n          {imageOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleImageDelete(index)} />}\r\n        </div>\r\n      ));\r\n    } else if (selectedOption === 'textandimageURL') {\r\n      return textAndImgOptions.map((option, index) => (\r\n        <div key={index} className={styles.textImageButtons}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            // checked={textandImageQuizData.correctOption === option}\r\n            checked={textandImageQuizData.correctOption === textAndImgTextOptions[index]}\r\n            onChange={() => handleTextAndImageRadioChange(index)}\r\n          />\r\n          <input\r\n            className={styles.inputTextAndImage}\r\n            type=\"text\"\r\n            placeholder=\"Text\"\r\n            value={textAndImgTextOptions[index]}\r\n            onChange={(e) => handleNewTextChange(index, e.target.value)}\r\n          />\r\n\r\n\r\n          <input\r\n            className={styles.inputTextAndImage}\r\n            type=\"text\"\r\n            placeholder=\"Image URL\"\r\n            value={textAndImgImageOptions[index] || ''}\r\n            onChange={(e) => handleNewImageChange(index, e.target.value)}\r\n          />\r\n\r\n\r\n          {textAndImgOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleTextAndImageDelete(index)} />}\r\n        </div>\r\n      ));\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  // const handleQuizLink = () => {\r\n  //   setShowQuizLink(true);\r\n  //   // closePollType();\r\n  // };\r\n\r\n\r\n  const handleClosePopUp = (flag) => {\r\n    setShowQuizLink(flag);\r\n    closeQandA();\r\n  };\r\n\r\n  const handleCreateQuiz = async () => {\r\n\r\n    // Validate question input\r\n    if (!questions[selectedOption] || !questions[selectedOption].trim()) {\r\n      // Alert or handle the case where the question input is not filled\r\n      alert('Please enter a question.');\r\n      return;\r\n    }\r\n\r\n    // Validate fields based on the selected option type\r\n    if (selectedOption === 'text') {\r\n      // Validate text options\r\n      if (textOptions.some(option => !option.trim())) {\r\n        // Alert or handle the case where a text option is not filled\r\n        alert('Please fill in all text options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!textQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct text option.');\r\n        return;\r\n      }\r\n    } else if (selectedOption === 'imageURL') {\r\n      // Validate image options\r\n      if (imageOptions.some(option => !option.trim())) {\r\n        // Alert or handle the case where an image option is not filled\r\n        alert('Please fill in all image options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!imageQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct image option.');\r\n        return;\r\n      }\r\n    } else if (selectedOption === 'textandimageURL') {\r\n      // Validate text and image options\r\n      if (\r\n        textAndImgTextOptions.some(option => !option.trim()) ||\r\n        textAndImgImageOptions.some(option => !option.trim())\r\n      ) {\r\n        // Alert or handle the case where a text or image option is not filled\r\n        alert('Please fill in all text and image options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!textandImageQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct text and image option.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    const currentDateAndTime = new Date();\r\n\r\n    debugger\r\n    const finalQuizCreatedData = {\r\n      quizName: sendQuizName,\r\n\r\n      typeText: 'text',\r\n      questionText: questions.text,\r\n      optionsText: textOptions,\r\n      correctOptionText: textQuizData.correctOption,\r\n      // timeText: textQuizData.time,\r\n\r\n      typeImg: 'imageURL',\r\n      questionImg: questions.imageURL,\r\n      optionsImg: imageOptions,\r\n      correctOptionImg: imageQuizData.correctOption,\r\n      // timeImg: imageQuizData.time,\r\n\r\n      typeTxtImg: 'textandimageURL',\r\n      questionTxtImg: questions.textandimageURL,\r\n      optionsTxtImg: textAndImgTextOptions,\r\n      optionsImageTxtImg: textAndImgImageOptions,\r\n      correctOptionTxtImg: textandImageQuizData.correctOption,\r\n      // timeTxtImg: textandImageQuizData.time,\r\n\r\n      currentDateAndTime: currentDateAndTime.toISOString(), // Add current date and time\r\n\r\n      totalTime:totalTime.newTime\r\n    }\r\n    // setCreatedQuizData((prevData) => [...prevData, finalQuizCreatedData]); // Append to the existing array\r\n    console.log(\"finalQuizCreatedData\", finalQuizCreatedData);\r\n\r\n\r\n    // Call the API directly with the single object\r\ntry {\r\n  const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/create/quiz`, finalQuizCreatedData);\r\n\r\n  console.log(\"Api Response\", response.data);\r\n} catch (error) {\r\n  console.error('Error posting data to API:', error);\r\n}\r\n\r\n    setQuestions({\r\n      text: \"\",\r\n      imageURL: \"\",\r\n      textandimageURL: \"\"\r\n    });\r\n    setTextOptions([\"\", \"\"]);\r\n    setImageOptions([\"\", \"\"]);\r\n\r\n    setTextQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      time: 0\r\n    });\r\n    setImageQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      time: 0\r\n    });\r\n    setTextandImageQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      optionsImage: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      time: 0\r\n    });\r\n    // setTextAndImgTextOptions([\"\", \"\"]);\r\n\r\n    // setTextAndImgImageOptions([\"\", \"\"]);\r\n    setTextAndImgTextOptions(new Array(textAndImgOptions.length).fill(\"\"));\r\n    setTextAndImgImageOptions(new Array(textAndImgOptions.length).fill(\"\"));\r\n\r\n    setShowQuizLink(true);\r\n\r\n  };\r\n\r\n  const handleDeleteQuiz = (index) => {\r\n    let updatedNewQuiz = [...newQuiz];\r\n    updatedNewQuiz.splice(index, 1);\r\n    setnewQuiz(updatedNewQuiz);\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.overlay}>\r\n        <div className={styles.parent}>\r\n          <div className={styles.addButton}>\r\n            <div className={styles.upperButton}>\r\n\r\n              <button>1</button>\r\n              {newQuiz.map((item, index) => (\r\n                <div key={index} >\r\n                  <button>{item + 1}</button>\r\n                  {index > -1 && (\r\n                    <CloseIcon\r\n                      className={styles.closeIcon}\r\n                      onClick={() => handleDeleteQuiz(index)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n              {newQuiz.length < 4 && (\r\n                <button className={styles.addQuestion} onClick={handleCreateNewQuiz}>\r\n                  +\r\n                </button>\r\n              )}\r\n\r\n            </div>\r\n            <p>Max 5 questions</p>\r\n          </div>\r\n          <div className={styles.inputParent}>\r\n            <input\r\n              className={styles.input}\r\n              placeholder=\"QuestionAndAnswer\"\r\n              name=\"question\"\r\n              value={questions[selectedOption] || ''}\r\n              onChange={(e) => {\r\n                // Update the question for the currently selected option type\r\n                updateQuestion(selectedOption, e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.buttonContainer}>\r\n            <p>Option Type</p>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"text\"\r\n              checked={selectedOption === 'text'}\r\n              onChange={() => handleOptionChange('text')}\r\n            />\r\n            <label>Text</label>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"imageURL\"\r\n              checked={selectedOption === 'imageURL'}\r\n              onChange={() => handleOptionChange('imageURL')}\r\n            />\r\n            <label>Image URL</label>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"textandimageURL\"\r\n              checked={selectedOption === 'textandimageURL'}\r\n              onChange={() => handleOptionChange('textandimageURL')}\r\n            />\r\n            <label>Text and Image URL</label>\r\n          </div>\r\n\r\n\r\n          <div className={styles.typeSelectContainer}>\r\n            <div className={styles.childOneContainer}>\r\n              {renderOptions()}\r\n              <div className={styles.subChildContainer}>\r\n                <button onClick={handleAddOption}>Add option</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles.childTwoContainer}>\r\n              <p>Timer</p>\r\n              <button onClick={() => handleTimer(0)}>Off</button>\r\n              <button onClick={() => handleTimer(5)}>5 sec</button>\r\n              <button onClick={() => handleTimer(10)}>10 sec</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.buttonContainer}>\r\n            <button className={styles.cancelButton} onClick={closeQandA}>\r\n              Cancel\r\n            </button>\r\n            <button className={styles.createButton} onClick={handleCreateQuiz}>\r\n              Create Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showQuizLink && <QuizLinkPopUp closePopUp={handleClosePopUp} />}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default QandAnsPopUp;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}