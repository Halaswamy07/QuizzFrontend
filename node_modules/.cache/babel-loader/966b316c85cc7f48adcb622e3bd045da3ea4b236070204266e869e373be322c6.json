{"ast":null,"code":"import React,{useState,useEffect}from'react';import styles from\"../Dashboard/Style.module.css\";import axios from'axios';import VisibilityIcon from'@mui/icons-material/Visibility';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function DashboardComponent(){const[quizzes,setQuizzes]=useState([]);useEffect(()=>{const fetchQuizzes=async()=>{try{const response=await axios.get(`${process.env.REACT_APP_API_URL}/api/create/quiz`);setQuizzes(response.data);}catch(error){console.error('Error fetching quizzes:',error);}};fetchQuizzes();},[]);const totalQuizzes=quizzes.length;// const countQuestionsByType = (questions, type) => {\n//   return questions.filter(question => question).length;\n// };\nconst countQuestionsByType=(questions,type)=>{return questions.filter(question=>question&&question.trim()!=='').length;};const countTextQuestions=quizzes.reduce((total,quiz)=>total+countQuestionsByType([quiz.questionText],'text'),0);const countImageQuestions=quizzes.reduce((total,quiz)=>total+countQuestionsByType([quiz.questionImg],'imageURL'),0);const countTextAndImageQuestions=quizzes.reduce((total,quiz)=>total+countQuestionsByType([quiz.questionTxtImg],'textandimageURL'),0);const totalCountQuestions=countTextQuestions+countImageQuestions+countTextAndImageQuestions;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:styles.main,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.parent,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.child,children:/*#__PURE__*/_jsxs(\"h3\",{className:styles.orange,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.countFontSize,children:totalQuizzes}),\" Quiz Created\"]})}),/*#__PURE__*/_jsx(\"div\",{className:styles.child,children:/*#__PURE__*/_jsxs(\"h3\",{className:styles.green,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.countFontSize,children:totalCountQuestions}),\" Questions Created \"]})}),/*#__PURE__*/_jsx(\"div\",{className:styles.child,children:/*#__PURE__*/_jsx(\"h3\",{className:styles.blue,children:\" K Total Impressions\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.childOne,children:/*#__PURE__*/_jsx(\"h1\",{children:\" Trending Quizs\"})}),/*#__PURE__*/_jsx(\"div\",{className:styles.parentFlex,children:quizzes.map((quiz,index)=>/*#__PURE__*/_jsxs(\"div\",{className:styles.parentTwo,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.flexContainer,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.logoText,children:quiz.quizName}),/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(VisibilityIcon,{className:styles.logoColor})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:styles.logoTime,children:[\"Created on: \",new Date(quiz.currentDateAndTime).toLocaleDateString('en-US',{day:'numeric',month:'short',year:'numeric'})]})})]},index))})]})]})});}export default DashboardComponent;","map":{"version":3,"names":["React","useState","useEffect","styles","axios","VisibilityIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DashboardComponent","quizzes","setQuizzes","fetchQuizzes","response","get","process","env","REACT_APP_API_URL","data","error","console","totalQuizzes","length","countQuestionsByType","questions","type","filter","question","trim","countTextQuestions","reduce","total","quiz","questionText","countImageQuestions","questionImg","countTextAndImageQuestions","questionTxtImg","totalCountQuestions","children","className","main","parent","child","orange","countFontSize","green","blue","childOne","parentFlex","map","index","parentTwo","flexContainer","logoText","quizName","logoColor","logoTime","Date","currentDateAndTime","toLocaleDateString","day","month","year"],"sources":["E:/cuvette-quizz-app/cuvette-frontend-quiz-app/src/Dashboard/DashboardComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from \"../Dashboard/Style.module.css\";\r\nimport axios from 'axios';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nfunction DashboardComponent() {\r\n\r\n  const [quizzes, setQuizzes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchQuizzes = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/create/quiz`);\r\n        setQuizzes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching quizzes:', error);\r\n      }\r\n    };\r\n  \r\n    fetchQuizzes();\r\n  }, []);\r\n  \r\n\r\n  const totalQuizzes = quizzes.length;\r\n\r\n  // const countQuestionsByType = (questions, type) => {\r\n  //   return questions.filter(question => question).length;\r\n  // };\r\n\r\n  const countQuestionsByType = (questions, type) => {\r\n    return questions.filter(question => question && question.trim() !== '').length;\r\n  };\r\n\r\n  const countTextQuestions = quizzes.reduce((total, quiz) => total + countQuestionsByType([quiz.questionText], 'text'), 0);\r\n  const countImageQuestions = quizzes.reduce((total, quiz) => total + countQuestionsByType([quiz.questionImg], 'imageURL'), 0);\r\n  const countTextAndImageQuestions = quizzes.reduce((total, quiz) => total + countQuestionsByType([quiz.questionTxtImg], 'textandimageURL'), 0);\r\n\r\n  const totalCountQuestions = countTextQuestions + countImageQuestions + countTextAndImageQuestions;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.main}>\r\n        <div className={styles.parent}>\r\n          <div className={styles.child}>\r\n            <h3 className={styles.orange}><span className={styles.countFontSize}>{totalQuizzes}</span> Quiz Created</h3>\r\n          </div>\r\n          <div className={styles.child}>\r\n            <h3 className={styles.green}><span className={styles.countFontSize}>{totalCountQuestions}</span> Questions Created </h3>\r\n          </div>\r\n          <div className={styles.child}>\r\n            <h3 className={styles.blue}> K Total Impressions</h3>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.childOne}>\r\n            <h1> Trending Quizs</h1>\r\n          </div>\r\n          <div className={styles.parentFlex}>\r\n            {quizzes.map((quiz, index) => (\r\n              <div className={styles.parentTwo} key={index}>\r\n                <div className={styles.flexContainer}>\r\n                  <label className={styles.logoText}>{quiz.quizName}</label>\r\n                  {/* Assuming there is a logo property in the quiz object */}\r\n                  <label><VisibilityIcon className={styles.logoColor}/></label>\r\n                </div>\r\n                <div>\r\n                  <p className={styles.logoTime}>Created on: {new Date(quiz.currentDateAndTime).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DashboardComponent"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}