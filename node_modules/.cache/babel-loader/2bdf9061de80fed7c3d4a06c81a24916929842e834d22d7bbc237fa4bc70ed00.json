{"ast":null,"code":"var _jsxFileName = \"E:\\\\cuvette-quizz-app\\\\cuvette-frontend-quiz-app\\\\src\\\\CreateQuiz\\\\PollType\\\\PollTypePopUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from '../PollType/Style.module.css';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport CloseIcon from '@mui/icons-material/Close';\nimport QuizLinkPopUp from '../QuizLink/QuizLinkPopUp';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PollTypePopUp({\n  closePopUp,\n  sendQuizName\n}) {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [textOptions, setTextOptions] = useState(['', '']);\n  const [imageOptions, setImageOptions] = useState(['', '']);\n  const [textAndImgOptions, setTextAndImgOptions] = useState(['', '']);\n  const [newQuiz, setnewQuiz] = useState([]);\n  const [showQuizLink, setShowQuizLink] = useState(false);\n  const [textAndImgTextOptions, setTextAndImgTextOptions] = useState(['', '']);\n  const [textAndImgImageOptions, setTextAndImgImageOptions] = useState(['', '']);\n\n  // const [myNewData, setMyNewData] = useState(['', '']);\n\n  const [questions, setQuestions] = useState({\n    text: '',\n    imageURL: '',\n    textandimageURL: ''\n  });\n\n  // const [createdPollData, setCreatedPollData] = useState([]);\n\n  const updateQuestion = (option, value) => {\n    setQuestions(prevQuestions => ({\n      ...prevQuestions,\n      [option]: value\n    }));\n  };\n  const [textQuizData, setTextQuizData] = useState({\n    quest: '',\n    options: ['', ''],\n    correctOption: '' // Rename to correctOption\n    // time: 0,\n  });\n  const [imageQuizData, setImageQuizData] = useState({\n    quest: '',\n    options: ['', ''],\n    correctOption: '' // Rename to correctOption\n    //    time: 0,\n  });\n  const [textandImageQuizData, setTextandImageQuizData] = useState({\n    quest: '',\n    optionsText: ['', ''],\n    optionsImage: ['', ''],\n    correctOption: '' // Rename to correctOption\n    //    time: 0,\n  });\n  const handleTextDelete = index => {\n    let updatedOptions = [...textOptions];\n    updatedOptions.splice(index, 1);\n    setTextOptions(updatedOptions);\n  };\n  const handleImageDelete = index => {\n    let updatedOption = [...imageOptions];\n    updatedOption.splice(index, 1);\n    setImageOptions(updatedOption);\n  };\n  const handleTextAndImageDelete = index => {\n    let updatedOption = [...textAndImgOptions];\n    let updatedTextOption = [...textAndImgTextOptions];\n    let updatedImageOption = [...textAndImgImageOptions];\n    updatedOption.splice(index, 1);\n    updatedTextOption.splice(index, 1);\n    updatedImageOption.splice(index, 1);\n    setTextAndImgOptions(updatedOption);\n    setTextAndImgTextOptions(updatedTextOption);\n    setTextAndImgImageOptions(updatedImageOption);\n  };\n  const handleTextRadioChange = index => {\n    setTextQuizData({\n      ...textQuizData,\n      correctOption: textOptions[index]\n    });\n    console.log(\"kk\", textQuizData);\n  };\n  const handleImageRadioChange = index => {\n    setImageQuizData({\n      ...imageQuizData,\n      correctOption: imageOptions[index]\n    });\n    console.log(\"kk\", imageQuizData);\n  };\n  const handleTextAndImageRadioChange = index => {\n    setTextandImageQuizData({\n      ...textandImageQuizData,\n      correctOption: textAndImgTextOptions[index]\n    });\n    console.log(\"Selected value:\", textandImageQuizData);\n  };\n  useEffect(() => {\n    console.log(\"Updated textQuizData:\", textQuizData);\n    console.log(\"Updated imageQuizData:\", imageQuizData);\n    console.log(\"Updated textandImageQuizData:\", textandImageQuizData);\n  }, [textQuizData, imageQuizData, textandImageQuizData]);\n  const closeQandA = () => {\n    closePopUp(false);\n  };\n  const handleOptionChange = value => {\n    // setSelectedOption(value);\n    // Set the current question for the selected option type\n    updateQuestion(selectedOption, questions[selectedOption] || '');\n    setSelectedOption(value);\n  };\n  const handleTextChange = (index, value) => {\n    const updatedOptions = [...textOptions];\n    updatedOptions[index] = value;\n    setTextOptions(updatedOptions);\n  };\n  const handleImageUrlChange = (index, value) => {\n    // Regular expression to check if the value is a valid URL\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n\n    // Check if the value is a valid URL\n    if (!urlRegex.test(value)) {\n      // Display an error or handle the case where the input is not a valid URL\n      alert('Please enter a valid URL.');\n      return;\n    }\n    const updatedOptions = [...imageOptions];\n    updatedOptions[index] = value;\n    setImageOptions(updatedOptions);\n  };\n\n  // const handleNewTextChange = (index, value) => {\n  //   debugger\n  //   const updatedOptions = [...myNewData];\n  //   updatedOptions[index] = value;\n  //   setMyNewData(updatedOptions);\n  // };\n\n  const handleNewTextChange = (index, value) => {\n    const updatedOptions = [...textAndImgTextOptions];\n    updatedOptions[index] = value;\n    setTextAndImgTextOptions(updatedOptions);\n    console.log(\"Mydata\", textAndImgTextOptions);\n  };\n  const handleNewImageChange = (index, value) => {\n    // Regular expression to check if the value is a valid URL\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n\n    // Check if the value is a valid URL\n    if (!urlRegex.test(value)) {\n      // Display an error or handle the case where the input is not a valid URL\n      alert('Please enter a valid URL.');\n      return;\n    }\n    const updatedOptions = [...textAndImgImageOptions];\n    updatedOptions[index] = value;\n    setTextAndImgImageOptions(updatedOptions);\n    console.log(\"MyImagedata\", textAndImgImageOptions);\n  };\n  const handleAddOption = () => {\n    if (selectedOption === 'text' && textOptions.length < 4) {\n      setTextOptions(prevOptions => [...prevOptions, '']);\n    } else if (selectedOption === 'imageURL' && imageOptions.length < 4) {\n      setImageOptions(prevImgOptions => [...prevImgOptions, '']);\n    } else if (selectedOption === 'textandimageURL' && textAndImgOptions.length < 4) {\n      setTextAndImgOptions(prevTextAndImgOptions => [...prevTextAndImgOptions, '']);\n      setTextAndImgTextOptions(prevTextAndImgTextOptions => [...prevTextAndImgTextOptions, '']);\n      setTextAndImgImageOptions(prevTextAndImgImageOptions => [...prevTextAndImgImageOptions, '']);\n    }\n  };\n  const handleCreateNewQuiz = () => {\n    if (newQuiz.length < 4) {\n      setnewQuiz(prevOptions => [...prevOptions, prevOptions.length + 1]);\n    }\n  };\n  const renderOptions = () => {\n    if (selectedOption === 'text') {\n      return textOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.radio,\n          type: \"radio\",\n          name: \"correctOption\",\n          checked: textQuizData.correctOption === option,\n          onChange: () => handleTextRadioChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Text\",\n          className: styles.inputText,\n          value: option,\n          onChange: e => handleTextChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), textOptions.length > 2 && index > 1 && /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          className: styles.deleteIcon,\n          onClick: () => handleTextDelete(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 51\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this));\n    } else if (selectedOption === 'imageURL') {\n      return imageOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.radio,\n          type: \"radio\",\n          name: \"correctOption\",\n          checked: imageQuizData.correctOption === option,\n          onChange: () => handleImageRadioChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Image URL\",\n          className: styles.inputText,\n          value: option,\n          onChange: e => handleImageUrlChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), imageOptions.length > 2 && index > 1 && /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          className: styles.deleteIcon,\n          onClick: () => handleImageDelete(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 52\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this));\n    } else if (selectedOption === 'textandimageURL') {\n      return textAndImgOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textImageButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.radio,\n          type: \"radio\",\n          name: \"correctOption\"\n          // checked={textandImageQuizData.correctOption === option}\n          ,\n          checked: textandImageQuizData.correctOption === textAndImgTextOptions[index],\n          onChange: () => handleTextAndImageRadioChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputTextAndImage,\n          type: \"text\",\n          placeholder: \"Text\",\n          value: textAndImgTextOptions[index],\n          onChange: e => handleNewTextChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputTextAndImage,\n          type: \"text\",\n          placeholder: \"Image URL\",\n          value: textAndImgImageOptions[index] || '',\n          onChange: e => handleNewImageChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), textAndImgOptions.length > 2 && index > 1 && /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          className: styles.deleteIcon,\n          onClick: () => handleTextAndImageDelete(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 57\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this));\n    }\n    return null;\n  };\n\n  // const handleQuizLink = () => {\n  //   setShowQuizLink(true);\n  //   // closePollType();\n  // };\n\n  const handleClosePopUp = flag => {\n    setShowQuizLink(flag);\n    closeQandA();\n  };\n  const handleCreateQuiz = async () => {\n    // Validate question input\n    if (!questions[selectedOption] || !questions[selectedOption].trim()) {\n      // Alert or handle the case where the question input is not filled\n      alert('Please enter a question.');\n      return;\n    }\n\n    // ... (rest of your code)\n\n    // Validate fields based on the selected option type\n    if (selectedOption === 'text') {\n      // Validate text options\n      if (textOptions.some(option => !option.trim())) {\n        // Alert or handle the case where a text option is not filled\n        alert('Please fill in all text options.');\n        return;\n      }\n      // Validate correct option\n      if (!textQuizData.correctOption.trim()) {\n        // Alert or handle the case where the correct option is not selected\n        alert('Please select the correct text option.');\n        return;\n      }\n    } else if (selectedOption === 'imageURL') {\n      // Validate image options\n      if (imageOptions.some(option => !option.trim())) {\n        // Alert or handle the case where an image option is not filled\n        alert('Please fill in all image options.');\n        return;\n      }\n      // Validate correct option\n      if (!imageQuizData.correctOption.trim()) {\n        // Alert or handle the case where the correct option is not selected\n        alert('Please select the correct image option.');\n        return;\n      }\n    } else if (selectedOption === 'textandimageURL') {\n      // Validate text and image options\n      if (textAndImgTextOptions.some(option => !option.trim()) || textAndImgImageOptions.some(option => !option.trim())) {\n        // Alert or handle the case where a text or image option is not filled\n        alert('Please fill in all text and image options.');\n        return;\n      }\n      // Validate correct option\n      if (!textandImageQuizData.correctOption.trim()) {\n        // Alert or handle the case where the correct option is not selected\n        alert('Please select the correct text and image option.');\n        return;\n      }\n    }\n\n    // If all validations pass, proceed with creating the quiz\n\n    //////////////\n\n    const currentDateAndTime = new Date();\n    debugger;\n    const finalPollCreatedData = {\n      pollName: sendQuizName,\n      typeText: 'text',\n      questionText: questions.text,\n      optionsText: textOptions,\n      correctOptionText: textQuizData.correctOption,\n      // timeText: textQuizData.time,\n\n      typeImg: 'imageURL',\n      questionImg: questions.imageURL,\n      optionsImg: imageOptions,\n      correctOptionImg: imageQuizData.correctOption,\n      // timeImg: imageQuizData.time,\n\n      typeTxtImg: 'textandimageURL',\n      questionTxtImg: questions.textandimageURL,\n      optionsTxtImg: textAndImgTextOptions,\n      optionsImageTxtImg: textAndImgImageOptions,\n      correctOptionTxtImg: textandImageQuizData.correctOption,\n      // timeTxtImg: textandImageQuizData.time,\n\n      currentDateAndTime: currentDateAndTime.toISOString() // Add current date and time\n    };\n    // setCreatedQuizData((prevData) => [...prevData, finalPollCreatedData]); // Append to the existing array\n    console.log(\"finalPollCreatedData\", finalPollCreatedData);\n\n    // Call the API directly with the single object\n    try {\n      const response = await axios.post(\"http://localhost:4747/api/create/poll\", finalPollCreatedData);\n      console.log(\"Api Response\", response.data);\n    } catch (error) {\n      console.error('Error posting data to API:', error);\n    }\n    setQuestions({\n      text: \"\",\n      imageURL: \"\",\n      textandimageURL: \"\"\n    });\n    setTextOptions([\"\", \"\"]);\n    setImageOptions([\"\", \"\"]);\n    setTextQuizData({\n      quest: \"\",\n      options: [\"\", \"\"],\n      correctOption: \"\"\n      // time: 0\n    });\n    setImageQuizData({\n      quest: \"\",\n      options: [\"\", \"\"],\n      correctOption: \"\"\n      // time: 0\n    });\n    setTextandImageQuizData({\n      quest: \"\",\n      optionsText: [\"\", \"\"],\n      optionsImage: [\"\", \"\"],\n      correctOption: \"\"\n      // time: 0\n    });\n    // setTextAndImgTextOptions([\"\", \"\"]);\n\n    // setTextAndImgImageOptions([\"\", \"\"]);\n    setTextAndImgTextOptions(new Array(textAndImgOptions.length).fill(\"\"));\n    setTextAndImgImageOptions(new Array(textAndImgOptions.length).fill(\"\"));\n    setShowQuizLink(true);\n  };\n  const handleDeleteQuiz = index => {\n    let updatedNewQuiz = [...newQuiz];\n    updatedNewQuiz.splice(index, 1);\n    setnewQuiz(updatedNewQuiz);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.parent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.addButton,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.upperButton,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), newQuiz.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                children: item + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this), index > -1 && /*#__PURE__*/_jsxDEV(CloseIcon, {\n                className: styles.closeIcon,\n                onClick: () => handleDeleteQuiz(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this)), newQuiz.length < 4 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.addQuestion,\n              onClick: handleCreateNewQuiz,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Max 5 questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputParent,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            placeholder: \"Poll Type\",\n            name: \"question\",\n            value: questions[selectedOption] || '',\n            onChange: e => {\n              // Update the question for the currently selected option type\n              updateQuestion(selectedOption, e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Option Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.radio,\n            type: \"radio\",\n            value: \"text\",\n            checked: selectedOption === 'text',\n            onChange: () => handleOptionChange('text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.radio,\n            type: \"radio\",\n            value: \"imageURL\",\n            checked: selectedOption === 'imageURL',\n            onChange: () => handleOptionChange('imageURL')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.radio,\n            type: \"radio\",\n            value: \"textandimageURL\",\n            checked: selectedOption === 'textandimageURL',\n            onChange: () => handleOptionChange('textandimageURL')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Text and Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.typeSelectContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.childOneContainer,\n            children: [renderOptions(), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.subChildContainer,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddOption,\n                children: \"Add option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.cancelButton,\n            onClick: closeQandA,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.createButton,\n            onClick: handleCreateQuiz,\n            children: \"Create Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), showQuizLink && /*#__PURE__*/_jsxDEV(QuizLinkPopUp, {\n      closePopUp: handleClosePopUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n}\n_s(PollTypePopUp, \"8Bb7Nf6Jc1Cpia35m04no+dfeuw=\");\n_c = PollTypePopUp;\nexport default PollTypePopUp;\nvar _c;\n$RefreshReg$(_c, \"PollTypePopUp\");","map":{"version":3,"names":["React","useEffect","useState","styles","DeleteForeverIcon","CloseIcon","QuizLinkPopUp","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PollTypePopUp","closePopUp","sendQuizName","_s","selectedOption","setSelectedOption","textOptions","setTextOptions","imageOptions","setImageOptions","textAndImgOptions","setTextAndImgOptions","newQuiz","setnewQuiz","showQuizLink","setShowQuizLink","textAndImgTextOptions","setTextAndImgTextOptions","textAndImgImageOptions","setTextAndImgImageOptions","questions","setQuestions","text","imageURL","textandimageURL","updateQuestion","option","value","prevQuestions","textQuizData","setTextQuizData","quest","options","correctOption","imageQuizData","setImageQuizData","textandImageQuizData","setTextandImageQuizData","optionsText","optionsImage","handleTextDelete","index","updatedOptions","splice","handleImageDelete","updatedOption","handleTextAndImageDelete","updatedTextOption","updatedImageOption","handleTextRadioChange","console","log","handleImageRadioChange","handleTextAndImageRadioChange","closeQandA","handleOptionChange","handleTextChange","handleImageUrlChange","urlRegex","test","alert","handleNewTextChange","handleNewImageChange","handleAddOption","length","prevOptions","prevImgOptions","prevTextAndImgOptions","prevTextAndImgTextOptions","prevTextAndImgImageOptions","handleCreateNewQuiz","renderOptions","map","children","className","radio","type","name","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","inputText","e","target","deleteIcon","onClick","textImageButtons","inputTextAndImage","handleClosePopUp","flag","handleCreateQuiz","trim","some","currentDateAndTime","Date","finalPollCreatedData","pollName","typeText","questionText","correctOptionText","typeImg","questionImg","optionsImg","correctOptionImg","typeTxtImg","questionTxtImg","optionsTxtImg","optionsImageTxtImg","correctOptionTxtImg","toISOString","response","post","data","error","Array","fill","handleDeleteQuiz","updatedNewQuiz","overlay","parent","addButton","upperButton","item","closeIcon","addQuestion","inputParent","input","buttonContainer","typeSelectContainer","childOneContainer","subChildContainer","cancelButton","createButton","_c","$RefreshReg$"],"sources":["E:/cuvette-quizz-app/cuvette-frontend-quiz-app/src/CreateQuiz/PollType/PollTypePopUp.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styles from '../PollType/Style.module.css';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport QuizLinkPopUp from '../QuizLink/QuizLinkPopUp';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction PollTypePopUp({ closePopUp, sendQuizName }) {\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [textOptions, setTextOptions] = useState(['', '']);\r\n  const [imageOptions, setImageOptions] = useState(['', '']);\r\n  const [textAndImgOptions, setTextAndImgOptions] = useState(['', '']);\r\n  const [newQuiz, setnewQuiz] = useState([]);\r\n  const [showQuizLink, setShowQuizLink] = useState(false);\r\n\r\n  const [textAndImgTextOptions, setTextAndImgTextOptions] = useState(['', '']);\r\n  const [textAndImgImageOptions, setTextAndImgImageOptions] = useState(['', '']);\r\n\r\n\r\n  // const [myNewData, setMyNewData] = useState(['', '']);\r\n\r\n\r\n  const [questions, setQuestions] = useState({\r\n    text: '',\r\n    imageURL: '',\r\n    textandimageURL: '',\r\n  });\r\n\r\n\r\n  // const [createdPollData, setCreatedPollData] = useState([]);\r\n\r\n\r\n  const updateQuestion = (option, value) => {\r\n    setQuestions((prevQuestions) => ({\r\n      ...prevQuestions,\r\n      [option]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  const [textQuizData, setTextQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    // time: 0,\r\n  });\r\n\r\n\r\n  const [imageQuizData, setImageQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    //    time: 0,\r\n  });\r\n\r\n\r\n  const [textandImageQuizData, setTextandImageQuizData] = useState({\r\n    quest: '',\r\n    optionsText: ['', ''],\r\n    optionsImage: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    //    time: 0,\r\n  });\r\n\r\n\r\n  const handleTextDelete = (index) => {\r\n    let updatedOptions = [...textOptions];\r\n    updatedOptions.splice(index, 1);\r\n    setTextOptions(updatedOptions);\r\n  }\r\n\r\n\r\n  const handleImageDelete = (index) => {\r\n    let updatedOption = [...imageOptions];\r\n    updatedOption.splice(index, 1);\r\n    setImageOptions(updatedOption);\r\n  }\r\n\r\n\r\n  const handleTextAndImageDelete = (index) => {\r\n    let updatedOption = [...textAndImgOptions];\r\n    let updatedTextOption = [...textAndImgTextOptions];\r\n    let updatedImageOption = [...textAndImgImageOptions];\r\n\r\n\r\n    updatedOption.splice(index, 1);\r\n    updatedTextOption.splice(index, 1);\r\n    updatedImageOption.splice(index, 1);\r\n\r\n\r\n    setTextAndImgOptions(updatedOption);\r\n    setTextAndImgTextOptions(updatedTextOption);\r\n    setTextAndImgImageOptions(updatedImageOption);\r\n  }\r\n\r\n  const handleTextRadioChange = (index) => {\r\n    setTextQuizData({ ...textQuizData, correctOption: textOptions[index] });\r\n    console.log(\"kk\", textQuizData);\r\n  };\r\n\r\n\r\n  const handleImageRadioChange = (index) => {\r\n    setImageQuizData({ ...imageQuizData, correctOption: imageOptions[index] });\r\n    console.log(\"kk\", imageQuizData);\r\n  };\r\n\r\n\r\n  const handleTextAndImageRadioChange = (index) => {\r\n\r\n\r\n    setTextandImageQuizData({ ...textandImageQuizData, correctOption: textAndImgTextOptions[index] })\r\n    console.log(\"Selected value:\", textandImageQuizData);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"Updated textQuizData:\", textQuizData);\r\n    console.log(\"Updated imageQuizData:\", imageQuizData);\r\n    console.log(\"Updated textandImageQuizData:\", textandImageQuizData);\r\n  }, [textQuizData, imageQuizData, textandImageQuizData])\r\n\r\n\r\n\r\n\r\n  const closeQandA = () => {\r\n    closePopUp(false);\r\n  };\r\n\r\n\r\n  const handleOptionChange = (value) => {\r\n    // setSelectedOption(value);\r\n    // Set the current question for the selected option type\r\n    updateQuestion(selectedOption, questions[selectedOption] || '');\r\n\r\n\r\n    setSelectedOption(value);\r\n  };\r\n\r\n\r\n  const handleTextChange = (index, value) => {\r\n    const updatedOptions = [...textOptions];\r\n    updatedOptions[index] = value;\r\n    setTextOptions(updatedOptions);\r\n  };\r\n\r\n\r\n  const handleImageUrlChange = (index, value) => {\r\n\r\n    // Regular expression to check if the value is a valid URL\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\n    // Check if the value is a valid URL\r\n    if (!urlRegex.test(value)) {\r\n      // Display an error or handle the case where the input is not a valid URL\r\n      alert('Please enter a valid URL.');\r\n      return;\r\n    }\r\n\r\n    const updatedOptions = [...imageOptions];\r\n    updatedOptions[index] = value;\r\n    setImageOptions(updatedOptions);\r\n  };\r\n\r\n\r\n  // const handleNewTextChange = (index, value) => {\r\n  //   debugger\r\n  //   const updatedOptions = [...myNewData];\r\n  //   updatedOptions[index] = value;\r\n  //   setMyNewData(updatedOptions);\r\n  // };\r\n\r\n\r\n  const handleNewTextChange = (index, value) => {\r\n\r\n\r\n    const updatedOptions = [...textAndImgTextOptions];\r\n    updatedOptions[index] = value;\r\n    setTextAndImgTextOptions(updatedOptions);\r\n    console.log(\"Mydata\", textAndImgTextOptions);\r\n  };\r\n\r\n\r\n  const handleNewImageChange = (index, value) => {\r\n\r\n    // Regular expression to check if the value is a valid URL\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\n    // Check if the value is a valid URL\r\n    if (!urlRegex.test(value)) {\r\n      // Display an error or handle the case where the input is not a valid URL\r\n      alert('Please enter a valid URL.');\r\n      return;\r\n    }\r\n\r\n    const updatedOptions = [...textAndImgImageOptions];\r\n    updatedOptions[index] = value;\r\n    setTextAndImgImageOptions(updatedOptions);\r\n    console.log(\"MyImagedata\", textAndImgImageOptions);\r\n\r\n\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    if (selectedOption === 'text' && textOptions.length < 4) {\r\n      setTextOptions((prevOptions) => [...prevOptions, '']);\r\n    }\r\n    else if (selectedOption === 'imageURL' && imageOptions.length < 4) {\r\n      setImageOptions((prevImgOptions) => [...prevImgOptions, '']);\r\n    } else if (selectedOption === 'textandimageURL' && textAndImgOptions.length < 4) {\r\n      setTextAndImgOptions((prevTextAndImgOptions) => [...prevTextAndImgOptions, '']);\r\n      setTextAndImgTextOptions((prevTextAndImgTextOptions) => [...prevTextAndImgTextOptions, '']);\r\n      setTextAndImgImageOptions((prevTextAndImgImageOptions) => [...prevTextAndImgImageOptions, '']);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCreateNewQuiz = () => {\r\n    if (newQuiz.length < 4) {\r\n      setnewQuiz((prevOptions) => [...prevOptions, prevOptions.length + 1]);\r\n    }\r\n  };\r\n\r\n\r\n  const renderOptions = () => {\r\n    if (selectedOption === 'text') {\r\n      return textOptions.map((option, index) => (\r\n        <div key={index}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={textQuizData.correctOption === option}\r\n            onChange={() => handleTextRadioChange(index)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Text\"\r\n            className={styles.inputText}\r\n            value={option}\r\n            onChange={(e) => handleTextChange(index, e.target.value)}\r\n          />\r\n          {textOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleTextDelete(index)} />}\r\n        </div>\r\n      ));\r\n    } else if (selectedOption === 'imageURL') {\r\n      return imageOptions.map((option, index) => (\r\n        <div key={index}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={imageQuizData.correctOption === option}\r\n            onChange={() => handleImageRadioChange(index)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Image URL\"\r\n            className={styles.inputText}\r\n            value={option}\r\n            onChange={(e) => handleImageUrlChange(index, e.target.value)}\r\n          />\r\n          {imageOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleImageDelete(index)} />}\r\n        </div>\r\n      ));\r\n    } else if (selectedOption === 'textandimageURL') {\r\n      return textAndImgOptions.map((option, index) => (\r\n        <div key={index} className={styles.textImageButtons}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            // checked={textandImageQuizData.correctOption === option}\r\n            checked={textandImageQuizData.correctOption === textAndImgTextOptions[index]}\r\n            onChange={() => handleTextAndImageRadioChange(index)}\r\n          />\r\n          <input\r\n            className={styles.inputTextAndImage}\r\n            type=\"text\"\r\n            placeholder=\"Text\"\r\n            value={textAndImgTextOptions[index]}\r\n            onChange={(e) => handleNewTextChange(index, e.target.value)}\r\n          />\r\n\r\n\r\n          <input\r\n            className={styles.inputTextAndImage}\r\n            type=\"text\"\r\n            placeholder=\"Image URL\"\r\n            value={textAndImgImageOptions[index] || ''}\r\n            onChange={(e) => handleNewImageChange(index, e.target.value)}\r\n          />\r\n\r\n\r\n          {textAndImgOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleTextAndImageDelete(index)} />}\r\n        </div>\r\n      ));\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  // const handleQuizLink = () => {\r\n  //   setShowQuizLink(true);\r\n  //   // closePollType();\r\n  // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleClosePopUp = (flag) => {\r\n    setShowQuizLink(flag);\r\n    closeQandA();\r\n  };\r\n\r\n\r\n  const handleCreateQuiz = async() => {\r\n\r\n    // Validate question input\r\n    if (!questions[selectedOption] || !questions[selectedOption].trim()) {\r\n      // Alert or handle the case where the question input is not filled\r\n      alert('Please enter a question.');\r\n      return;\r\n    }\r\n\r\n    // ... (rest of your code)\r\n\r\n    // Validate fields based on the selected option type\r\n    if (selectedOption === 'text') {\r\n      // Validate text options\r\n      if (textOptions.some(option => !option.trim())) {\r\n        // Alert or handle the case where a text option is not filled\r\n        alert('Please fill in all text options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!textQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct text option.');\r\n        return;\r\n      }\r\n    } else if (selectedOption === 'imageURL') {\r\n      // Validate image options\r\n      if (imageOptions.some(option => !option.trim())) {\r\n        // Alert or handle the case where an image option is not filled\r\n        alert('Please fill in all image options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!imageQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct image option.');\r\n        return;\r\n      }\r\n    } else if (selectedOption === 'textandimageURL') {\r\n      // Validate text and image options\r\n      if (\r\n        textAndImgTextOptions.some(option => !option.trim()) ||\r\n        textAndImgImageOptions.some(option => !option.trim())\r\n      ) {\r\n        // Alert or handle the case where a text or image option is not filled\r\n        alert('Please fill in all text and image options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!textandImageQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct text and image option.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // If all validations pass, proceed with creating the quiz\r\n\r\n\r\n\r\n//////////////\r\n\r\n\r\n\r\nconst currentDateAndTime = new Date();\r\n\r\ndebugger\r\nconst finalPollCreatedData = {\r\n  pollName: sendQuizName,\r\n\r\n  typeText: 'text',\r\n  questionText: questions.text,\r\n  optionsText: textOptions,\r\n  correctOptionText: textQuizData.correctOption,\r\n  // timeText: textQuizData.time,\r\n\r\n  typeImg: 'imageURL',\r\n  questionImg: questions.imageURL,\r\n  optionsImg: imageOptions,\r\n  correctOptionImg: imageQuizData.correctOption,\r\n  // timeImg: imageQuizData.time,\r\n\r\n  typeTxtImg: 'textandimageURL',\r\n  questionTxtImg: questions.textandimageURL,\r\n  optionsTxtImg: textAndImgTextOptions,\r\n  optionsImageTxtImg: textAndImgImageOptions,\r\n  correctOptionTxtImg: textandImageQuizData.correctOption,\r\n  // timeTxtImg: textandImageQuizData.time,\r\n\r\n  currentDateAndTime: currentDateAndTime.toISOString(), // Add current date and time\r\n\r\n}\r\n// setCreatedQuizData((prevData) => [...prevData, finalPollCreatedData]); // Append to the existing array\r\nconsole.log(\"finalPollCreatedData\", finalPollCreatedData);\r\n\r\n\r\n// Call the API directly with the single object\r\ntry {\r\n  const response = await axios.post(\"http://localhost:4747/api/create/poll\", finalPollCreatedData);\r\n\r\n  console.log(\"Api Response\", response.data);\r\n} catch (error) {\r\n  console.error('Error posting data to API:', error);\r\n}\r\n\r\n    setQuestions({\r\n      text: \"\",\r\n      imageURL: \"\",\r\n      textandimageURL: \"\"\r\n    });\r\n    setTextOptions([\"\", \"\"]);\r\n    setImageOptions([\"\", \"\"]);\r\n\r\n    setTextQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      // time: 0\r\n    });\r\n    setImageQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      // time: 0\r\n    });\r\n    setTextandImageQuizData({\r\n      quest: \"\",\r\n      optionsText: [\"\", \"\"],\r\n      optionsImage: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      // time: 0\r\n    });\r\n    // setTextAndImgTextOptions([\"\", \"\"]);\r\n\r\n    // setTextAndImgImageOptions([\"\", \"\"]);\r\n    setTextAndImgTextOptions(new Array(textAndImgOptions.length).fill(\"\"));\r\n    setTextAndImgImageOptions(new Array(textAndImgOptions.length).fill(\"\"));\r\n\r\n    setShowQuizLink(true);\r\n\r\n  };\r\n\r\n\r\n  const handleDeleteQuiz = (index) => {\r\n    let updatedNewQuiz = [...newQuiz];\r\n    updatedNewQuiz.splice(index, 1);\r\n    setnewQuiz(updatedNewQuiz);\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.overlay}>\r\n        <div className={styles.parent}>\r\n          <div className={styles.addButton}>\r\n            <div className={styles.upperButton}>\r\n\r\n\r\n\r\n\r\n              <button>1</button>\r\n              {newQuiz.map((item, index) => (\r\n                <div key={index} >\r\n                  <button>{item + 1}</button>\r\n                  {index > -1 && (\r\n                    <CloseIcon\r\n                      className={styles.closeIcon}\r\n                      onClick={() => handleDeleteQuiz(index)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n              {newQuiz.length < 4 && (\r\n                <button className={styles.addQuestion} onClick={handleCreateNewQuiz}>\r\n                  +\r\n                </button>\r\n              )}\r\n\r\n            </div>\r\n            <p>Max 5 questions</p>\r\n          </div>\r\n          <div className={styles.inputParent}>\r\n            <input\r\n              className={styles.input}\r\n              placeholder=\"Poll Type\"\r\n              name=\"question\"\r\n              value={questions[selectedOption] || ''}\r\n              onChange={(e) => {\r\n                // Update the question for the currently selected option type\r\n                updateQuestion(selectedOption, e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.buttonContainer}>\r\n            <p>Option Type</p>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"text\"\r\n              checked={selectedOption === 'text'}\r\n              onChange={() => handleOptionChange('text')}\r\n            />\r\n            <label>Text</label>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"imageURL\"\r\n              checked={selectedOption === 'imageURL'}\r\n              onChange={() => handleOptionChange('imageURL')}\r\n            />\r\n            <label>Image URL</label>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"textandimageURL\"\r\n              checked={selectedOption === 'textandimageURL'}\r\n              onChange={() => handleOptionChange('textandimageURL')}\r\n            />\r\n            <label>Text and Image URL</label>\r\n          </div>\r\n\r\n\r\n          <div className={styles.typeSelectContainer}>\r\n            <div className={styles.childOneContainer}>\r\n              {renderOptions()}\r\n              <div className={styles.subChildContainer}>\r\n                <button onClick={handleAddOption}>Add option</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.buttonContainer}>\r\n            <button className={styles.cancelButton} onClick={closeQandA}>\r\n              Cancel\r\n            </button>\r\n            <button className={styles.createButton} onClick={handleCreateQuiz}>\r\n              Create Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showQuizLink && <QuizLinkPopUp closePopUp={handleClosePopUp} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollTypePopUp"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}