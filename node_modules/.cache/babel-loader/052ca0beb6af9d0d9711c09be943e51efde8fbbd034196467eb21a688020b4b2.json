{"ast":null,"code":"import React,{useEffect,useState}from'react';import styles from'../PollType/Style.module.css';import DeleteForeverIcon from'@mui/icons-material/DeleteForever';import CloseIcon from'@mui/icons-material/Close';import QuizLinkPopUp from'../QuizLink/QuizLinkPopUp';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function PollTypePopUp(_ref){let{closePopUp,sendQuizName}=_ref;const[selectedOption,setSelectedOption]=useState('');const[textOptions,setTextOptions]=useState(['','']);const[imageOptions,setImageOptions]=useState(['','']);const[textAndImgOptions,setTextAndImgOptions]=useState(['','']);const[newQuiz,setnewQuiz]=useState([]);const[showQuizLink,setShowQuizLink]=useState(false);const[textAndImgTextOptions,setTextAndImgTextOptions]=useState(['','']);const[textAndImgImageOptions,setTextAndImgImageOptions]=useState(['','']);const[questions,setQuestions]=useState({text:'',imageURL:'',textandimageURL:''});const updateQuestion=(option,value)=>{setQuestions(prevQuestions=>({...prevQuestions,[option]:value}));};const[textQuizData,setTextQuizData]=useState({quest:'',options:['',''],correctOption:''});const[imageQuizData,setImageQuizData]=useState({quest:'',options:['',''],correctOption:''});const[textandImageQuizData,setTextandImageQuizData]=useState({quest:'',optionsText:['',''],optionsImage:['',''],correctOption:''});const handleTextDelete=index=>{let updatedOptions=[...textOptions];updatedOptions.splice(index,1);setTextOptions(updatedOptions);};const handleImageDelete=index=>{let updatedOption=[...imageOptions];updatedOption.splice(index,1);setImageOptions(updatedOption);};const handleTextAndImageDelete=index=>{let updatedOption=[...textAndImgOptions];let updatedTextOption=[...textAndImgTextOptions];let updatedImageOption=[...textAndImgImageOptions];updatedOption.splice(index,1);updatedTextOption.splice(index,1);updatedImageOption.splice(index,1);setTextAndImgOptions(updatedOption);setTextAndImgTextOptions(updatedTextOption);setTextAndImgImageOptions(updatedImageOption);};const handleTextRadioChange=index=>{setTextQuizData({...textQuizData,correctOption:textOptions[index]});console.log(\"kk\",textQuizData);};const handleImageRadioChange=index=>{setImageQuizData({...imageQuizData,correctOption:imageOptions[index]});console.log(\"kk\",imageQuizData);};const handleTextAndImageRadioChange=index=>{setTextandImageQuizData({...textandImageQuizData,correctOption:textAndImgTextOptions[index]});console.log(\"Selected value:\",textandImageQuizData);};useEffect(()=>{console.log(\"Updated textQuizData:\",textQuizData);console.log(\"Updated imageQuizData:\",imageQuizData);console.log(\"Updated textandImageQuizData:\",textandImageQuizData);},[textQuizData,imageQuizData,textandImageQuizData]);const closeQandA=()=>{closePopUp(false);};const handleOptionChange=value=>{updateQuestion(selectedOption,questions[selectedOption]||'');setSelectedOption(value);};const handleTextChange=(index,value)=>{const updatedOptions=[...textOptions];updatedOptions[index]=value;setTextOptions(updatedOptions);};const handleImageUrlChange=(index,value)=>{const urlRegex=/^(ftp|http|https):\\/\\/[^ \"]+$/;if(!urlRegex.test(value)){alert('Please enter a valid URL.');return;}const updatedOptions=[...imageOptions];updatedOptions[index]=value;setImageOptions(updatedOptions);};const handleNewTextChange=(index,value)=>{const updatedOptions=[...textAndImgTextOptions];updatedOptions[index]=value;setTextAndImgTextOptions(updatedOptions);console.log(\"Mydata\",textAndImgTextOptions);};const handleNewImageChange=(index,value)=>{const urlRegex=/^(ftp|http|https):\\/\\/[^ \"]+$/;if(!urlRegex.test(value)){alert('Please enter a valid URL.');return;}const updatedOptions=[...textAndImgImageOptions];updatedOptions[index]=value;setTextAndImgImageOptions(updatedOptions);console.log(\"MyImagedata\",textAndImgImageOptions);};const handleAddOption=()=>{if(selectedOption==='text'&&textOptions.length<4){setTextOptions(prevOptions=>[...prevOptions,'']);}else if(selectedOption==='imageURL'&&imageOptions.length<4){setImageOptions(prevImgOptions=>[...prevImgOptions,'']);}else if(selectedOption==='textandimageURL'&&textAndImgOptions.length<4){setTextAndImgOptions(prevTextAndImgOptions=>[...prevTextAndImgOptions,'']);setTextAndImgTextOptions(prevTextAndImgTextOptions=>[...prevTextAndImgTextOptions,'']);setTextAndImgImageOptions(prevTextAndImgImageOptions=>[...prevTextAndImgImageOptions,'']);}};const handleCreateNewQuiz=()=>{if(newQuiz.length<4){setnewQuiz(prevOptions=>[...prevOptions,prevOptions.length+1]);}};const renderOptions=()=>{if(selectedOption==='text'){return textOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",name:\"correctOption\",checked:textQuizData.correctOption===option,onChange:()=>handleTextRadioChange(index)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Text\",className:styles.inputText,value:option,onChange:e=>handleTextChange(index,e.target.value)}),textOptions.length>2&&index>1&&/*#__PURE__*/_jsx(DeleteForeverIcon,{className:styles.deleteIcon,onClick:()=>handleTextDelete(index)})]},index));}else if(selectedOption==='imageURL'){return imageOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",name:\"correctOption\",checked:imageQuizData.correctOption===option,onChange:()=>handleImageRadioChange(index)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Image URL\",className:styles.inputText,value:option,onChange:e=>handleImageUrlChange(index,e.target.value)}),imageOptions.length>2&&index>1&&/*#__PURE__*/_jsx(DeleteForeverIcon,{className:styles.deleteIcon,onClick:()=>handleImageDelete(index)})]},index));}else if(selectedOption==='textandimageURL'){return textAndImgOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:styles.textImageButtons,children:[/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",name:\"correctOption\",checked:textandImageQuizData.correctOption===textAndImgTextOptions[index],onChange:()=>handleTextAndImageRadioChange(index)}),/*#__PURE__*/_jsx(\"input\",{className:styles.inputTextAndImage,type:\"text\",placeholder:\"Text\",value:textAndImgTextOptions[index],onChange:e=>handleNewTextChange(index,e.target.value)}),/*#__PURE__*/_jsx(\"input\",{className:styles.inputTextAndImage,type:\"text\",placeholder:\"Image URL\",value:textAndImgImageOptions[index]||'',onChange:e=>handleNewImageChange(index,e.target.value)}),textAndImgOptions.length>2&&index>1&&/*#__PURE__*/_jsx(DeleteForeverIcon,{className:styles.deleteIcon,onClick:()=>handleTextAndImageDelete(index)})]},index));}return null;};const handleClosePopUp=flag=>{setShowQuizLink(flag);closeQandA();};const handleCreateQuiz=async()=>{if(!questions[selectedOption]||!questions[selectedOption].trim()){alert('Please enter a question.');return;}if(selectedOption==='text'){if(textOptions.some(option=>!option.trim())){alert('Please fill in all text options.');return;}if(!textQuizData.correctOption.trim()){alert('Please select the correct text option.');return;}}else if(selectedOption==='imageURL'){if(imageOptions.some(option=>!option.trim())){// Alert or handle the case where an image option is not filled\nalert('Please fill in all image options.');return;}// Validate correct option\nif(!imageQuizData.correctOption.trim()){// Alert or handle the case where the correct option is not selected\nalert('Please select the correct image option.');return;}}else if(selectedOption==='textandimageURL'){// Validate text and image options\nif(textAndImgTextOptions.some(option=>!option.trim())||textAndImgImageOptions.some(option=>!option.trim())){// Alert or handle the case where a text or image option is not filled\nalert('Please fill in all text and image options.');return;}// Validate correct option\nif(!textandImageQuizData.correctOption.trim()){// Alert or handle the case where the correct option is not selected\nalert('Please select the correct text and image option.');return;}}// If all validations pass, proceed with creating the quiz\n//////////////\nconst currentDateAndTime=new Date();debugger;const finalPollCreatedData={pollName:sendQuizName,typeText:'text',questionText:questions.text,optionsText:textOptions,correctOptionText:textQuizData.correctOption,// timeText: textQuizData.time,\ntypeImg:'imageURL',questionImg:questions.imageURL,optionsImg:imageOptions,correctOptionImg:imageQuizData.correctOption,// timeImg: imageQuizData.time,\ntypeTxtImg:'textandimageURL',questionTxtImg:questions.textandimageURL,optionsTxtImg:textAndImgTextOptions,optionsImageTxtImg:textAndImgImageOptions,correctOptionTxtImg:textandImageQuizData.correctOption,// timeTxtImg: textandImageQuizData.time,\ncurrentDateAndTime:currentDateAndTime.toISOString()// Add current date and time\n};// setCreatedQuizData((prevData) => [...prevData, finalPollCreatedData]); // Append to the existing array\nconsole.log(\"finalPollCreatedData\",finalPollCreatedData);// Call the API directly with the single object\ntry{const response=await axios.post(`${process.env.REACT_APP_API_URL}/api/create/poll`,finalPollCreatedData);console.log(\"Api Response\",response.data);}catch(error){console.error('Error posting data to API:',error);}setQuestions({text:\"\",imageURL:\"\",textandimageURL:\"\"});setTextOptions([\"\",\"\"]);setImageOptions([\"\",\"\"]);setTextQuizData({quest:\"\",options:[\"\",\"\"],correctOption:\"\"// time: 0\n});setImageQuizData({quest:\"\",options:[\"\",\"\"],correctOption:\"\"// time: 0\n});setTextandImageQuizData({quest:\"\",optionsText:[\"\",\"\"],optionsImage:[\"\",\"\"],correctOption:\"\"// time: 0\n});// setTextAndImgTextOptions([\"\", \"\"]);\n// setTextAndImgImageOptions([\"\", \"\"]);\nsetTextAndImgTextOptions(new Array(textAndImgOptions.length).fill(\"\"));setTextAndImgImageOptions(new Array(textAndImgOptions.length).fill(\"\"));setShowQuizLink(true);};const handleDeleteQuiz=index=>{let updatedNewQuiz=[...newQuiz];updatedNewQuiz.splice(index,1);setnewQuiz(updatedNewQuiz);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.overlay,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.parent,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.addButton,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.upperButton,children:[/*#__PURE__*/_jsx(\"button\",{children:\"1\"}),newQuiz.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{children:item+1}),index>-1&&/*#__PURE__*/_jsx(CloseIcon,{className:styles.closeIcon,onClick:()=>handleDeleteQuiz(index)})]},index)),newQuiz.length<4&&/*#__PURE__*/_jsx(\"button\",{className:styles.addQuestion,onClick:handleCreateNewQuiz,children:\"+\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Max 5 questions\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.inputParent,children:/*#__PURE__*/_jsx(\"input\",{className:styles.input,placeholder:\"Poll Type\",name:\"question\",value:questions[selectedOption]||'',onChange:e=>{// Update the question for the currently selected option type\nupdateQuestion(selectedOption,e.target.value);}})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttonContainer,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Option Type\"}),/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",value:\"text\",checked:selectedOption==='text',onChange:()=>handleOptionChange('text')}),/*#__PURE__*/_jsx(\"label\",{children:\"Text\"}),/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",value:\"imageURL\",checked:selectedOption==='imageURL',onChange:()=>handleOptionChange('imageURL')}),/*#__PURE__*/_jsx(\"label\",{children:\"Image URL\"}),/*#__PURE__*/_jsx(\"input\",{className:styles.radio,type:\"radio\",value:\"textandimageURL\",checked:selectedOption==='textandimageURL',onChange:()=>handleOptionChange('textandimageURL')}),/*#__PURE__*/_jsx(\"label\",{children:\"Text and Image URL\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.typeSelectContainer,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.childOneContainer,children:[renderOptions(),/*#__PURE__*/_jsx(\"div\",{className:styles.subChildContainer,children:/*#__PURE__*/_jsx(\"button\",{onClick:handleAddOption,children:\"Add option\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttonContainer,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.cancelButton,onClick:closeQandA,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.createButton,onClick:handleCreateQuiz,children:\"Create Quiz\"})]})]})}),showQuizLink&&/*#__PURE__*/_jsx(QuizLinkPopUp,{closePopUp:handleClosePopUp})]});}export default PollTypePopUp;","map":{"version":3,"names":["React","useEffect","useState","styles","DeleteForeverIcon","CloseIcon","QuizLinkPopUp","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PollTypePopUp","_ref","closePopUp","sendQuizName","selectedOption","setSelectedOption","textOptions","setTextOptions","imageOptions","setImageOptions","textAndImgOptions","setTextAndImgOptions","newQuiz","setnewQuiz","showQuizLink","setShowQuizLink","textAndImgTextOptions","setTextAndImgTextOptions","textAndImgImageOptions","setTextAndImgImageOptions","questions","setQuestions","text","imageURL","textandimageURL","updateQuestion","option","value","prevQuestions","textQuizData","setTextQuizData","quest","options","correctOption","imageQuizData","setImageQuizData","textandImageQuizData","setTextandImageQuizData","optionsText","optionsImage","handleTextDelete","index","updatedOptions","splice","handleImageDelete","updatedOption","handleTextAndImageDelete","updatedTextOption","updatedImageOption","handleTextRadioChange","console","log","handleImageRadioChange","handleTextAndImageRadioChange","closeQandA","handleOptionChange","handleTextChange","handleImageUrlChange","urlRegex","test","alert","handleNewTextChange","handleNewImageChange","handleAddOption","length","prevOptions","prevImgOptions","prevTextAndImgOptions","prevTextAndImgTextOptions","prevTextAndImgImageOptions","handleCreateNewQuiz","renderOptions","map","children","className","radio","type","name","checked","onChange","placeholder","inputText","e","target","deleteIcon","onClick","textImageButtons","inputTextAndImage","handleClosePopUp","flag","handleCreateQuiz","trim","some","currentDateAndTime","Date","finalPollCreatedData","pollName","typeText","questionText","correctOptionText","typeImg","questionImg","optionsImg","correctOptionImg","typeTxtImg","questionTxtImg","optionsTxtImg","optionsImageTxtImg","correctOptionTxtImg","toISOString","response","post","process","env","REACT_APP_API_URL","data","error","Array","fill","handleDeleteQuiz","updatedNewQuiz","overlay","parent","addButton","upperButton","item","closeIcon","addQuestion","inputParent","input","buttonContainer","typeSelectContainer","childOneContainer","subChildContainer","cancelButton","createButton"],"sources":["E:/cuvette-quizz-app/cuvette-frontend-quiz-app/src/CreateQuiz/PollType/PollTypePopUp.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styles from '../PollType/Style.module.css';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport QuizLinkPopUp from '../QuizLink/QuizLinkPopUp';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction PollTypePopUp({ closePopUp, sendQuizName }) {\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [textOptions, setTextOptions] = useState(['', '']);\r\n  const [imageOptions, setImageOptions] = useState(['', '']);\r\n  const [textAndImgOptions, setTextAndImgOptions] = useState(['', '']);\r\n  const [newQuiz, setnewQuiz] = useState([]);\r\n  const [showQuizLink, setShowQuizLink] = useState(false);\r\n\r\n  const [textAndImgTextOptions, setTextAndImgTextOptions] = useState(['', '']);\r\n  const [textAndImgImageOptions, setTextAndImgImageOptions] = useState(['', '']);\r\n\r\n\r\n\r\n\r\n  const [questions, setQuestions] = useState({\r\n    text: '',\r\n    imageURL: '',\r\n    textandimageURL: '',\r\n  });\r\n\r\n\r\n\r\n\r\n  const updateQuestion = (option, value) => {\r\n    setQuestions((prevQuestions) => ({\r\n      ...prevQuestions,\r\n      [option]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  const [textQuizData, setTextQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    correctOption: '',\r\n  });\r\n\r\n\r\n  const [imageQuizData, setImageQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    correctOption: '', \r\n  });\r\n\r\n\r\n  const [textandImageQuizData, setTextandImageQuizData] = useState({\r\n    quest: '',\r\n    optionsText: ['', ''],\r\n    optionsImage: ['', ''],\r\n    correctOption: '', \r\n  });\r\n\r\n\r\n  const handleTextDelete = (index) => {\r\n    let updatedOptions = [...textOptions];\r\n    updatedOptions.splice(index, 1);\r\n    setTextOptions(updatedOptions);\r\n  }\r\n\r\n\r\n  const handleImageDelete = (index) => {\r\n    let updatedOption = [...imageOptions];\r\n    updatedOption.splice(index, 1);\r\n    setImageOptions(updatedOption);\r\n  }\r\n\r\n\r\n  const handleTextAndImageDelete = (index) => {\r\n    let updatedOption = [...textAndImgOptions];\r\n    let updatedTextOption = [...textAndImgTextOptions];\r\n    let updatedImageOption = [...textAndImgImageOptions];\r\n\r\n\r\n    updatedOption.splice(index, 1);\r\n    updatedTextOption.splice(index, 1);\r\n    updatedImageOption.splice(index, 1);\r\n\r\n\r\n    setTextAndImgOptions(updatedOption);\r\n    setTextAndImgTextOptions(updatedTextOption);\r\n    setTextAndImgImageOptions(updatedImageOption);\r\n  }\r\n\r\n  const handleTextRadioChange = (index) => {\r\n    setTextQuizData({ ...textQuizData, correctOption: textOptions[index] });\r\n    console.log(\"kk\", textQuizData);\r\n  };\r\n\r\n\r\n  const handleImageRadioChange = (index) => {\r\n    setImageQuizData({ ...imageQuizData, correctOption: imageOptions[index] });\r\n    console.log(\"kk\", imageQuizData);\r\n  };\r\n\r\n\r\n  const handleTextAndImageRadioChange = (index) => {\r\n\r\n\r\n    setTextandImageQuizData({ ...textandImageQuizData, correctOption: textAndImgTextOptions[index] })\r\n    console.log(\"Selected value:\", textandImageQuizData);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"Updated textQuizData:\", textQuizData);\r\n    console.log(\"Updated imageQuizData:\", imageQuizData);\r\n    console.log(\"Updated textandImageQuizData:\", textandImageQuizData);\r\n  }, [textQuizData, imageQuizData, textandImageQuizData])\r\n\r\n\r\n\r\n\r\n  const closeQandA = () => {\r\n    closePopUp(false);\r\n  };\r\n\r\n\r\n  const handleOptionChange = (value) => {\r\n    \r\n    updateQuestion(selectedOption, questions[selectedOption] || '');\r\n\r\n\r\n    setSelectedOption(value);\r\n  };\r\n\r\n\r\n  const handleTextChange = (index, value) => {\r\n    const updatedOptions = [...textOptions];\r\n    updatedOptions[index] = value;\r\n    setTextOptions(updatedOptions);\r\n  };\r\n\r\n\r\n  const handleImageUrlChange = (index, value) => {\r\n\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\n    if (!urlRegex.test(value)) {\r\n      alert('Please enter a valid URL.');\r\n      return;\r\n    }\r\n\r\n    const updatedOptions = [...imageOptions];\r\n    updatedOptions[index] = value;\r\n    setImageOptions(updatedOptions);\r\n  };\r\n\r\n\r\n  \r\n\r\n  const handleNewTextChange = (index, value) => {\r\n\r\n\r\n    const updatedOptions = [...textAndImgTextOptions];\r\n    updatedOptions[index] = value;\r\n    setTextAndImgTextOptions(updatedOptions);\r\n    console.log(\"Mydata\", textAndImgTextOptions);\r\n  };\r\n\r\n\r\n  const handleNewImageChange = (index, value) => {\r\n\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\n    if (!urlRegex.test(value)) {\r\n      alert('Please enter a valid URL.');\r\n      return;\r\n    }\r\n\r\n    const updatedOptions = [...textAndImgImageOptions];\r\n    updatedOptions[index] = value;\r\n    setTextAndImgImageOptions(updatedOptions);\r\n    console.log(\"MyImagedata\", textAndImgImageOptions);\r\n\r\n\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    if (selectedOption === 'text' && textOptions.length < 4) {\r\n      setTextOptions((prevOptions) => [...prevOptions, '']);\r\n    }\r\n    else if (selectedOption === 'imageURL' && imageOptions.length < 4) {\r\n      setImageOptions((prevImgOptions) => [...prevImgOptions, '']);\r\n    } else if (selectedOption === 'textandimageURL' && textAndImgOptions.length < 4) {\r\n      setTextAndImgOptions((prevTextAndImgOptions) => [...prevTextAndImgOptions, '']);\r\n      setTextAndImgTextOptions((prevTextAndImgTextOptions) => [...prevTextAndImgTextOptions, '']);\r\n      setTextAndImgImageOptions((prevTextAndImgImageOptions) => [...prevTextAndImgImageOptions, '']);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCreateNewQuiz = () => {\r\n    if (newQuiz.length < 4) {\r\n      setnewQuiz((prevOptions) => [...prevOptions, prevOptions.length + 1]);\r\n    }\r\n  };\r\n\r\n\r\n  const renderOptions = () => {\r\n    if (selectedOption === 'text') {\r\n      return textOptions.map((option, index) => (\r\n        <div key={index}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={textQuizData.correctOption === option}\r\n            onChange={() => handleTextRadioChange(index)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Text\"\r\n            className={styles.inputText}\r\n            value={option}\r\n            onChange={(e) => handleTextChange(index, e.target.value)}\r\n          />\r\n          {textOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleTextDelete(index)} />}\r\n        </div>\r\n      ));\r\n    } else if (selectedOption === 'imageURL') {\r\n      return imageOptions.map((option, index) => (\r\n        <div key={index}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={imageQuizData.correctOption === option}\r\n            onChange={() => handleImageRadioChange(index)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Image URL\"\r\n            className={styles.inputText}\r\n            value={option}\r\n            onChange={(e) => handleImageUrlChange(index, e.target.value)}\r\n          />\r\n          {imageOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleImageDelete(index)} />}\r\n        </div>\r\n      ));\r\n    } else if (selectedOption === 'textandimageURL') {\r\n      return textAndImgOptions.map((option, index) => (\r\n        <div key={index} className={styles.textImageButtons}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={textandImageQuizData.correctOption === textAndImgTextOptions[index]}\r\n            onChange={() => handleTextAndImageRadioChange(index)}\r\n          />\r\n          <input\r\n            className={styles.inputTextAndImage}\r\n            type=\"text\"\r\n            placeholder=\"Text\"\r\n            value={textAndImgTextOptions[index]}\r\n            onChange={(e) => handleNewTextChange(index, e.target.value)}\r\n          />\r\n\r\n\r\n          <input\r\n            className={styles.inputTextAndImage}\r\n            type=\"text\"\r\n            placeholder=\"Image URL\"\r\n            value={textAndImgImageOptions[index] || ''}\r\n            onChange={(e) => handleNewImageChange(index, e.target.value)}\r\n          />\r\n\r\n\r\n          {textAndImgOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleTextAndImageDelete(index)} />}\r\n        </div>\r\n      ));\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  const handleClosePopUp = (flag) => {\r\n    setShowQuizLink(flag);\r\n    closeQandA();\r\n  };\r\n\r\n\r\n  const handleCreateQuiz = async() => {\r\n\r\n    if (!questions[selectedOption] || !questions[selectedOption].trim()) {\r\n      alert('Please enter a question.');\r\n      return;\r\n    }\r\n\r\n    \r\n    if (selectedOption === 'text') {\r\n      if (textOptions.some(option => !option.trim())) {\r\n        alert('Please fill in all text options.');\r\n        return;\r\n      }\r\n      if (!textQuizData.correctOption.trim()) {\r\n        alert('Please select the correct text option.');\r\n        return;\r\n      }\r\n    } else if (selectedOption === 'imageURL') {\r\n      if (imageOptions.some(option => !option.trim())) {\r\n        // Alert or handle the case where an image option is not filled\r\n        alert('Please fill in all image options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!imageQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct image option.');\r\n        return;\r\n      }\r\n    } else if (selectedOption === 'textandimageURL') {\r\n      // Validate text and image options\r\n      if (\r\n        textAndImgTextOptions.some(option => !option.trim()) ||\r\n        textAndImgImageOptions.some(option => !option.trim())\r\n      ) {\r\n        // Alert or handle the case where a text or image option is not filled\r\n        alert('Please fill in all text and image options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!textandImageQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct text and image option.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // If all validations pass, proceed with creating the quiz\r\n\r\n\r\n\r\n//////////////\r\n\r\n\r\n\r\nconst currentDateAndTime = new Date();\r\n\r\ndebugger\r\nconst finalPollCreatedData = {\r\n  pollName: sendQuizName,\r\n\r\n  typeText: 'text',\r\n  questionText: questions.text,\r\n  optionsText: textOptions,\r\n  correctOptionText: textQuizData.correctOption,\r\n  // timeText: textQuizData.time,\r\n\r\n  typeImg: 'imageURL',\r\n  questionImg: questions.imageURL,\r\n  optionsImg: imageOptions,\r\n  correctOptionImg: imageQuizData.correctOption,\r\n  // timeImg: imageQuizData.time,\r\n\r\n  typeTxtImg: 'textandimageURL',\r\n  questionTxtImg: questions.textandimageURL,\r\n  optionsTxtImg: textAndImgTextOptions,\r\n  optionsImageTxtImg: textAndImgImageOptions,\r\n  correctOptionTxtImg: textandImageQuizData.correctOption,\r\n  // timeTxtImg: textandImageQuizData.time,\r\n\r\n  currentDateAndTime: currentDateAndTime.toISOString(), // Add current date and time\r\n\r\n}\r\n// setCreatedQuizData((prevData) => [...prevData, finalPollCreatedData]); // Append to the existing array\r\nconsole.log(\"finalPollCreatedData\", finalPollCreatedData);\r\n\r\n\r\n// Call the API directly with the single object\r\ntry {\r\n  const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/create/poll`, finalPollCreatedData);\r\n\r\n  console.log(\"Api Response\", response.data);\r\n} catch (error) {\r\n  console.error('Error posting data to API:', error);\r\n}\r\n\r\n\r\n    setQuestions({\r\n      text: \"\",\r\n      imageURL: \"\",\r\n      textandimageURL: \"\"\r\n    });\r\n    setTextOptions([\"\", \"\"]);\r\n    setImageOptions([\"\", \"\"]);\r\n\r\n    setTextQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      // time: 0\r\n    });\r\n    setImageQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      // time: 0\r\n    });\r\n    setTextandImageQuizData({\r\n      quest: \"\",\r\n      optionsText: [\"\", \"\"],\r\n      optionsImage: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      // time: 0\r\n    });\r\n    // setTextAndImgTextOptions([\"\", \"\"]);\r\n\r\n    // setTextAndImgImageOptions([\"\", \"\"]);\r\n    setTextAndImgTextOptions(new Array(textAndImgOptions.length).fill(\"\"));\r\n    setTextAndImgImageOptions(new Array(textAndImgOptions.length).fill(\"\"));\r\n\r\n    setShowQuizLink(true);\r\n\r\n  };\r\n\r\n\r\n  const handleDeleteQuiz = (index) => {\r\n    let updatedNewQuiz = [...newQuiz];\r\n    updatedNewQuiz.splice(index, 1);\r\n    setnewQuiz(updatedNewQuiz);\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.overlay}>\r\n        <div className={styles.parent}>\r\n          <div className={styles.addButton}>\r\n            <div className={styles.upperButton}>\r\n\r\n\r\n\r\n\r\n              <button>1</button>\r\n              {newQuiz.map((item, index) => (\r\n                <div key={index} >\r\n                  <button>{item + 1}</button>\r\n                  {index > -1 && (\r\n                    <CloseIcon\r\n                      className={styles.closeIcon}\r\n                      onClick={() => handleDeleteQuiz(index)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n              {newQuiz.length < 4 && (\r\n                <button className={styles.addQuestion} onClick={handleCreateNewQuiz}>\r\n                  +\r\n                </button>\r\n              )}\r\n\r\n            </div>\r\n            <p>Max 5 questions</p>\r\n          </div>\r\n          <div className={styles.inputParent}>\r\n            <input\r\n              className={styles.input}\r\n              placeholder=\"Poll Type\"\r\n              name=\"question\"\r\n              value={questions[selectedOption] || ''}\r\n              onChange={(e) => {\r\n                // Update the question for the currently selected option type\r\n                updateQuestion(selectedOption, e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.buttonContainer}>\r\n            <p>Option Type</p>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"text\"\r\n              checked={selectedOption === 'text'}\r\n              onChange={() => handleOptionChange('text')}\r\n            />\r\n            <label>Text</label>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"imageURL\"\r\n              checked={selectedOption === 'imageURL'}\r\n              onChange={() => handleOptionChange('imageURL')}\r\n            />\r\n            <label>Image URL</label>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"textandimageURL\"\r\n              checked={selectedOption === 'textandimageURL'}\r\n              onChange={() => handleOptionChange('textandimageURL')}\r\n            />\r\n            <label>Text and Image URL</label>\r\n          </div>\r\n\r\n\r\n          <div className={styles.typeSelectContainer}>\r\n            <div className={styles.childOneContainer}>\r\n              {renderOptions()}\r\n              <div className={styles.subChildContainer}>\r\n                <button onClick={handleAddOption}>Add option</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.buttonContainer}>\r\n            <button className={styles.cancelButton} onClick={closeQandA}>\r\n              Cancel\r\n            </button>\r\n            <button className={styles.createButton} onClick={handleCreateQuiz}>\r\n              Create Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showQuizLink && <QuizLinkPopUp closePopUp={handleClosePopUp} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollTypePopUp"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}