{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import styles from'../QuizPollTypeText/Style.module.css';import{useParams}from'react-router-dom';// Import useParams from react-router-dom\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PollText=()=>{const[quizData,setQuizData]=useState([]);const[currentIndex,setCurrentIndex]=useState(0);// const [timer, setTimer] = useState(0);\nconst[displayType,setDisplayType]=useState('text');// 'text', 'image', 'textImage'\nconst[error,setError]=useState('');const{id}=useParams();const[loading,setLoading]=useState(true);const[displayTypes,setDisplayTypes]=useState(['text','imageURL','textandimageURL']);// const [currentDisplayIndex, setCurrentDisplayIndex] = useState(0);\n// const [allCasesOver, setAllCasesOver] = useState(false);\nconst[textPollOne,setTextPollOne]=useState(0);const[textPollTwo,setTextPollTwo]=useState(0);const[textPollThree,setTextPollThree]=useState(0);const[textPollFour,setTextPollFour]=useState(0);const[imgPollOne,setImgPollOne]=useState(0);const[imgPollTwo,setImgPollTwo]=useState(0);const[imgPollThree,setImgPollThree]=useState(0);const[imgPollFour,setImgPollFour]=useState(0);const[textImgPollOne,setTextImgPollOne]=useState(0);const[textImgPollTwo,setTextImgPollTwo]=useState(0);const[textImgPollThree,setTextImgPollThree]=useState(0);const[textImgPollFour,setTextImgPollFour]=useState(0);const[optionClicked,setOptionClicked]=useState(false);const[selectedOption,setSelectedOption]=useState(null);useEffect(()=>{const fetchQuizData=async()=>{try{debugger;const response=await axios.get(`${process.env.REACT_APP_API_URL}/api/create/poll/${id}`);console.log('API Response:',response.data);setQuizData(response.data);setLoading(false);// setTimer(response.data[currentIndex]?.time || 0);\n}catch(error){console.error('Error fetching quiz data:',error);setError('Error fetching quiz data');setLoading(false);}};fetchQuizData();},[id]);const handleOptionClick=optionsText=>{setSelectedOption(optionsText);};const handleNext=()=>{debugger;switch(displayType){case'text':switch(selectedOption){case quizData.optionsText[0]:setTextPollOne(prevCount=>{const newCount=prevCount+1;console.log(\"textPollOne\",newCount);return newCount;});break;case quizData.optionsText[1]:setTextPollTwo(prevCount=>{const newCount=prevCount+1;console.log(\"textPollTwo\",newCount);return newCount;});break;case quizData.optionsText[2]:setTextPollThree(prevCount=>{const newCount=prevCount+1;console.log(\"textPollThree\",newCount);return newCount;});break;case quizData.optionsText[3]:setTextPollFour(prevCount=>{const newCount=prevCount+1;console.log(\"textPollFour\",newCount);return newCount;});break;default:break;}break;case'imageURL':switch(selectedOption){case quizData.optionsImg[0]:setImgPollOne(prevCount=>prevCount+1);break;case quizData.optionsImg[1]:setImgPollTwo(prevCount=>prevCount+1);break;case quizData.optionsImg[2]:setImgPollThree(prevCount=>prevCount+1);break;case quizData.optionsImg[3]:setImgPollFour(prevCount=>prevCount+1);break;default:break;}break;}// Try one \nsetCurrentIndex(prevIndex=>{const nextIndex=(prevIndex+1)%displayTypes.length;setDisplayType(displayTypes[nextIndex]);// // Check if all cases are over\nif(nextIndex===0){alert(\"Quiz questions are over!\");// Optionally, you can redirect or perform any other action after showing the alert\n}return nextIndex;});};// useEffect(()=>{\n//   console.log(\"textPollOne\", textPollOne)\n// }, [textPollOne])\nconst renderContentByType=()=>{if(quizData.length===0){// Display loading indicator or handle the case when quiz data is not yet available\nreturn/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}switch(displayType){case'text':// Check if quizData.questionText is not empty\nif(!quizData.questionText){return null;}return/*#__PURE__*/(// Render text content\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.childone,children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"01/\",quizData.length]})}),quizData.questionText&&/*#__PURE__*/_jsx(\"div\",{className:styles.childthree,children:/*#__PURE__*/_jsx(\"h2\",{children:quizData.questionText})}),quizData.optionsText&&/*#__PURE__*/_jsx(\"div\",{className:styles.childtwo,children:quizData.optionsText.map((optionsText,index)=>/*#__PURE__*/_jsx(\"div\",{className:styles.subChild,onClick:()=>handleOptionClick(optionsText),children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:optionsText})})},index))}),quizData.typeText&&/*#__PURE__*/_jsx(\"div\",{className:styles.childthree,children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Type: \",quizData.typeText]})})]}));case'imageURL':// Check if quizData.questionText is not empty\nif(!quizData.questionImg){return null;}return/*#__PURE__*/(// Render image content\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.childone,children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"01/\",quizData.length]})}),quizData.questionImg&&/*#__PURE__*/_jsx(\"div\",{className:styles.childthree,children:/*#__PURE__*/_jsx(\"h2\",{children:quizData.questionImg})}),quizData.optionsImg&&/*#__PURE__*/_jsx(\"div\",{className:styles.childtwo,children:quizData.optionsImg.map((optionsImg,index)=>/*#__PURE__*/_jsx(\"div\",{className:styles.subChild,onClick:()=>handleOptionClick(optionsImg),children:/*#__PURE__*/_jsx(\"img\",{src:optionsImg,alt:index+1})},index))}),quizData.typeImg&&/*#__PURE__*/_jsx(\"div\",{className:styles.childthree,children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Type: \",quizData.typeImg]})})]}));case'textandimageURL':// Check if quizData.questionText is not empty\nif(!quizData.questionTxtImg){return null;}return/*#__PURE__*/(// Render text and image content\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.childone,children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"01/\",quizData.length]})}),quizData.questionTxtImg&&/*#__PURE__*/_jsx(\"div\",{className:styles.childthree,children:/*#__PURE__*/_jsx(\"h2\",{children:quizData.questionTxtImg})}),quizData.optionsTxtImg&&/*#__PURE__*/_jsx(\"div\",{className:styles.childtwoTxtImg,children:quizData.optionsTxtImg.map((optionsTxtImg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:styles.subChildTxtImg,onClick:()=>handleOptionClick(optionsTxtImg),children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:optionsTxtImg})}),quizData.optionsImageTxtImg&&/*#__PURE__*/_jsx(\"div\",{className:styles.childtwoImgstyle,children:/*#__PURE__*/_jsx(\"img\",{src:quizData.optionsImageTxtImg[index],alt:`Option ${index+1}`})},index)]},index))}),quizData.typeTxtImg&&/*#__PURE__*/_jsx(\"div\",{className:styles.childthree,children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Type: \",quizData.typeTxtImg]})})]}));default:return null;}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:styles.parent,children:[renderContentByType(),/*#__PURE__*/_jsx(\"div\",{className:styles.childfour,children:/*#__PURE__*/_jsx(\"button\",{className:styles.buttonNext,onClick:handleNext,children:\"Next\"})})]})});};export default PollText;","map":{"version":3,"names":["React","useState","useEffect","axios","styles","useParams","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PollText","quizData","setQuizData","currentIndex","setCurrentIndex","displayType","setDisplayType","error","setError","id","loading","setLoading","displayTypes","setDisplayTypes","textPollOne","setTextPollOne","textPollTwo","setTextPollTwo","textPollThree","setTextPollThree","textPollFour","setTextPollFour","imgPollOne","setImgPollOne","imgPollTwo","setImgPollTwo","imgPollThree","setImgPollThree","imgPollFour","setImgPollFour","textImgPollOne","setTextImgPollOne","textImgPollTwo","setTextImgPollTwo","textImgPollThree","setTextImgPollThree","textImgPollFour","setTextImgPollFour","optionClicked","setOptionClicked","selectedOption","setSelectedOption","fetchQuizData","response","get","process","env","REACT_APP_API_URL","console","log","data","handleOptionClick","optionsText","handleNext","prevCount","newCount","optionsImg","prevIndex","nextIndex","length","alert","renderContentByType","children","questionText","className","childone","childthree","childtwo","map","index","subChild","onClick","typeText","questionImg","src","alt","typeImg","questionTxtImg","optionsTxtImg","childtwoTxtImg","subChildTxtImg","optionsImageTxtImg","childtwoImgstyle","typeTxtImg","parent","childfour","buttonNext"],"sources":["E:/cuvette-quizz-app/cuvette-frontend-quiz-app/src/QuizInterface/QuizPollType/QuizPollTypeText/PollText.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styles from '../QuizPollTypeText/Style.module.css';\r\nimport { useParams } from 'react-router-dom'; // Import useParams from react-router-dom\r\n\r\nconst PollText = () => {\r\n  const [quizData, setQuizData] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  // const [timer, setTimer] = useState(0);\r\n  const [displayType, setDisplayType] = useState('text'); // 'text', 'image', 'textImage'\r\n  const [error, setError] = useState('')\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [displayTypes, setDisplayTypes] = useState(['text', 'imageURL', 'textandimageURL']);\r\n  // const [currentDisplayIndex, setCurrentDisplayIndex] = useState(0);\r\n  // const [allCasesOver, setAllCasesOver] = useState(false);\r\n\r\n  const [textPollOne, setTextPollOne] = useState(0)\r\n  const [textPollTwo, setTextPollTwo] = useState(0)\r\n  const [textPollThree, setTextPollThree] = useState(0)\r\n  const [textPollFour, setTextPollFour] = useState(0)\r\n\r\n  const [imgPollOne, setImgPollOne] = useState(0)\r\n  const [imgPollTwo, setImgPollTwo] = useState(0)\r\n  const [imgPollThree, setImgPollThree] = useState(0)\r\n  const [imgPollFour, setImgPollFour] = useState(0)\r\n\r\n  const [textImgPollOne, setTextImgPollOne] = useState(0)\r\n  const [textImgPollTwo, setTextImgPollTwo] = useState(0)\r\n  const [textImgPollThree, setTextImgPollThree] = useState(0)\r\n  const [textImgPollFour, setTextImgPollFour] = useState(0)\r\n\r\n  const [optionClicked, setOptionClicked] = useState(false);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchQuizData = async () => {\r\n      try {\r\n        debugger\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/create/poll/${id}`);\r\n        console.log('API Response:', response.data);\r\n        setQuizData(response.data);\r\n        setLoading(false);\r\n        // setTimer(response.data[currentIndex]?.time || 0);\r\n      } catch (error) {\r\n        console.error('Error fetching quiz data:', error);\r\n        setError('Error fetching quiz data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [id]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleOptionClick = (optionsText) => {\r\n\r\n    setSelectedOption(optionsText);\r\n\r\n    \r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n\r\ndebugger\r\n\r\nswitch (displayType) {\r\n  case 'text':\r\n    switch (selectedOption) {\r\n      case quizData.optionsText[0]:\r\n        setTextPollOne((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          console.log(\"textPollOne\", newCount);\r\n          return newCount;\r\n        });\r\n        break;\r\n      case quizData.optionsText[1]:\r\n        setTextPollTwo((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          console.log(\"textPollTwo\", newCount);\r\n          return newCount;\r\n        });\r\n        break;\r\n      case quizData.optionsText[2]:\r\n        setTextPollThree((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          console.log(\"textPollThree\", newCount);\r\n          return newCount;\r\n        });\r\n        break;\r\n      case quizData.optionsText[3]:\r\n        setTextPollFour((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          console.log(\"textPollFour\", newCount);\r\n          return newCount;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    break;\r\n\r\n\r\n\r\n    case 'imageURL':\r\n      switch (selectedOption) {\r\n        case quizData.optionsImg[0]:\r\n          setImgPollOne((prevCount) => prevCount + 1);\r\n          break;\r\n        case quizData.optionsImg[1]:\r\n          setImgPollTwo((prevCount) => prevCount + 1);\r\n          break;\r\n        case quizData.optionsImg[2]:\r\n          setImgPollThree((prevCount) => prevCount + 1);\r\n          break;\r\n        case quizData.optionsImg[3]:\r\n          setImgPollFour((prevCount) => prevCount + 1);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      break;\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Try one \r\n    setCurrentIndex((prevIndex) => {\r\n      const nextIndex = (prevIndex + 1) % displayTypes.length;\r\n      setDisplayType(displayTypes[nextIndex]);\r\n\r\n      // // Check if all cases are over\r\n      if (nextIndex === 0) {\r\n        alert(\"Quiz questions are over!\");\r\n        // Optionally, you can redirect or perform any other action after showing the alert\r\n      }\r\n      return nextIndex;\r\n    });\r\n  };\r\n\r\n\r\n\r\n// useEffect(()=>{\r\n//   console.log(\"textPollOne\", textPollOne)\r\n// }, [textPollOne])\r\n\r\n\r\n  const renderContentByType = () => {\r\n\r\n    if (quizData.length === 0) {\r\n      // Display loading indicator or handle the case when quiz data is not yet available\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    switch (displayType) {\r\n      case 'text':\r\n        // Check if quizData.questionText is not empty\r\n        if (!quizData.questionText) {\r\n          return null;\r\n        }\r\n\r\n        return (\r\n          // Render text content\r\n          <>\r\n            <div className={styles.childone}>\r\n              <h3>01/{quizData.length}</h3>\r\n            </div>\r\n            {quizData.questionText && (\r\n              <div className={styles.childthree}>\r\n                <h2>{quizData.questionText}</h2>\r\n              </div>\r\n            )}\r\n            {quizData.optionsText && (\r\n              <div className={styles.childtwo}>\r\n                {quizData.optionsText.map((optionsText, index) => (\r\n                  <div key={index} className={styles.subChild}   onClick={() => handleOptionClick(optionsText)}>\r\n                    <div>\r\n                      <p>{optionsText}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {quizData.typeText && (\r\n              <div className={styles.childthree}>\r\n                <p>Type: {quizData.typeText}</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      case 'imageURL':\r\n        // Check if quizData.questionText is not empty\r\n        if (!quizData.questionImg) {\r\n          return null;\r\n        }\r\n\r\n        return (\r\n          // Render image content\r\n          <>\r\n            <div className={styles.childone}>\r\n              <h3>01/{quizData.length}</h3>\r\n              {/* <h2>{timer > 0 ? `00:${timer}s` : \"Time's up!\"}</h2> */}\r\n            </div>\r\n\r\n            {quizData.questionImg && (\r\n              <div className={styles.childthree}>\r\n                <h2>{quizData.questionImg}</h2>\r\n              </div>\r\n            )}\r\n\r\n\r\n            {quizData.optionsImg && (\r\n              <div className={styles.childtwo}>\r\n                {quizData.optionsImg.map((optionsImg, index) => (\r\n                  <div key={index} className={styles.subChild} onClick={() => handleOptionClick(optionsImg)}>\r\n                    {/* <div> */}\r\n                      <img src={optionsImg} alt={index + 1} />\r\n                    {/* </div> */}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {quizData.typeImg && (\r\n              <div className={styles.childthree}>\r\n                <p>Type: {quizData.typeImg}</p>\r\n              </div>\r\n            )}\r\n\r\n\r\n          </>\r\n        );\r\n      case 'textandimageURL':\r\n        // Check if quizData.questionText is not empty\r\n        if (!quizData.questionTxtImg) {\r\n          return null;\r\n        }\r\n        return (\r\n          // Render text and image content\r\n          <>\r\n\r\n            <div className={styles.childone}>\r\n              <h3>01/{quizData.length}</h3>\r\n              {/* <h2>{timer > 0 ? `00:${timer}s` : \"Time's up!\"}</h2> */}\r\n            </div>\r\n\r\n            {quizData.questionTxtImg && (\r\n              <div className={styles.childthree}>\r\n                <h2>{quizData.questionTxtImg}</h2>\r\n              </div>\r\n            )}\r\n            {quizData.optionsTxtImg && (\r\n              <div className={styles.childtwoTxtImg}>\r\n                {quizData.optionsTxtImg.map((optionsTxtImg, index) => (\r\n                  <div key={index} className={styles.subChildTxtImg}onClick={() => handleOptionClick(optionsTxtImg)}>\r\n                    <div>\r\n                      <p>{optionsTxtImg}</p>\r\n                    </div>\r\n                    {quizData.optionsImageTxtImg && (\r\n                      <div key={index} className={styles.childtwoImgstyle}>\r\n                        <img src={quizData.optionsImageTxtImg[index]} alt={`Option ${index + 1}`} />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {quizData.typeTxtImg && (\r\n              <div className={styles.childthree}>\r\n                <p>Type: {quizData.typeTxtImg}</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return <>\r\n    <div className={styles.parent}>\r\n\r\n      {renderContentByType()}\r\n\r\n      <div className={styles.childfour}>\r\n        <button className={styles.buttonNext} onClick={handleNext}>\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </>;\r\n};\r\n\r\nexport default PollText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}