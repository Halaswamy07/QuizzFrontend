{"ast":null,"code":"var _jsxFileName = \"E:\\\\cuvette-quizz-app\\\\cuvette-frontend-quiz-app\\\\src\\\\CreateQuiz\\\\QandAnsType\\\\QandAnsPopUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from '../QandAnsType/Style.module.css';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport CloseIcon from '@mui/icons-material/Close';\nimport QuizLinkPopUp from '../QuizLink/QuizLinkPopUp';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QandAnsPopUp({\n  closePopUp,\n  sendQuizName\n}) {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [textOptions, setTextOptions] = useState(['', '']);\n  const [imageOptions, setImageOptions] = useState(['', '']);\n  const [textAndImgOptions, setTextAndImgOptions] = useState(['', '']);\n  const [newQuiz, setnewQuiz] = useState([]);\n  const [showQuizLink, setShowQuizLink] = useState(false);\n  const [textAndImgTextOptions, setTextAndImgTextOptions] = useState(['', '']);\n  const [textAndImgImageOptions, setTextAndImgImageOptions] = useState(['', '']);\n\n  // const [myNewData, setMyNewData] = useState(['', '']);\n\n  const [questions, setQuestions] = useState({\n    text: '',\n    imageURL: '',\n    textandimageURL: ''\n  });\n\n  // const [createdQuizData, setCreatedQuizData] = useState([]);\n\n  const updateQuestion = (option, value) => {\n    setQuestions(prevQuestions => ({\n      ...prevQuestions,\n      [option]: value\n    }));\n  };\n\n  ///////-------FOR TIME------------\n\n  const [totalTime, setTotalTime] = useState({\n    newTime: 0\n  });\n\n  ///////-------FOR TIME------------\n\n  const [textQuizData, setTextQuizData] = useState({\n    quest: '',\n    options: ['', ''],\n    correctOption: '' // Rename to correctOption\n    // time: 0,\n  });\n  const [imageQuizData, setImageQuizData] = useState({\n    quest: '',\n    options: ['', ''],\n    correctOption: '' // Rename to correctOption\n    // time: 0,\n  });\n  const [textandImageQuizData, setTextandImageQuizData] = useState({\n    quest: '',\n    options: ['', ''],\n    optionsImage: ['', ''],\n    correctOption: '' // Rename to correctOption\n    // time: 0,\n  });\n  const handleTextDelete = index => {\n    let updatedOptions = [...textOptions];\n    updatedOptions.splice(index, 1);\n    setTextOptions(updatedOptions);\n  };\n  const handleImageDelete = index => {\n    let updatedOption = [...imageOptions];\n    updatedOption.splice(index, 1);\n    setImageOptions(updatedOption);\n  };\n  const handleTextAndImageDelete = index => {\n    let updatedOption = [...textAndImgOptions];\n    let updatedTextOption = [...textAndImgTextOptions];\n    let updatedImageOption = [...textAndImgImageOptions];\n    updatedOption.splice(index, 1);\n    updatedTextOption.splice(index, 1);\n    updatedImageOption.splice(index, 1);\n    setTextAndImgOptions(updatedOption);\n    setTextAndImgTextOptions(updatedTextOption);\n    setTextAndImgImageOptions(updatedImageOption);\n  };\n\n  // const handleTimer = (sec) => {\n  //   // Check the selected option and update the corresponding state\n  //   switch (selectedOption) {\n  //     case 'text':\n  //       setTextQuizData({ ...textQuizData, time: sec });\n  //       console.log(\"Selected time for textQuizData:\", sec);\n  //       break;\n  //     case 'imageURL':\n  //       setImageQuizData({ ...imageQuizData, time: sec });\n  //       break;\n  //     case 'textandimageURL':\n  //       setTextandImageQuizData({ ...textandImageQuizData, time: sec });\n  //       break;\n  //     default:\n  //       console.warn(`Unhandled selectedOption: ${selectedOption}`);\n  //       // You can throw an error, log a warning, or set a default behavior here\n  //       break;\n  //   }\n  // }\n\n  // ======================= IN TRIAL FOR TIME START\n\n  const handleTimer = sec => {\n    // Check the selected option and update the corresponding state\n    switch (selectedOption) {\n      case 'text':\n        setTotalTime({\n          ...totalTime,\n          newTime: sec\n        });\n        console.log(\"Selected time for textQuizData:\", sec);\n        break;\n      case 'imageURL':\n        setTotalTime({\n          ...totalTime,\n          newTime: sec\n        });\n        break;\n      case 'textandimageURL':\n        setTotalTime({\n          ...totalTime,\n          newTime: sec\n        });\n        break;\n      default:\n        console.warn(`Unhandled selectedOption: ${selectedOption}`);\n        // You can throw an error, log a warning, or set a default behavior here\n        break;\n    }\n  };\n\n  // ====================== IN TRIAL FOR TIME START\n\n  const handleTextRadioChange = index => {\n    setTextQuizData({\n      ...textQuizData,\n      correctOption: textOptions[index]\n    });\n    console.log(\"kk\", textQuizData);\n  };\n  const handleImageRadioChange = index => {\n    setImageQuizData({\n      ...imageQuizData,\n      correctOption: imageOptions[index]\n    });\n    console.log(\"kk\", imageQuizData);\n  };\n  const handleTextAndImageRadioChange = index => {\n    setTextandImageQuizData({\n      ...textandImageQuizData,\n      correctOption: textAndImgTextOptions[index]\n    });\n    console.log(\"Selected value:\", textandImageQuizData);\n  };\n  useEffect(() => {\n    console.log(\"Updated textQuizData:\", textQuizData);\n    console.log(\"Updated imageQuizData:\", imageQuizData);\n    console.log(\"Updated textandImageQuizData:\", textandImageQuizData);\n  }, [textQuizData, imageQuizData, textandImageQuizData]);\n  const closeQandA = () => {\n    closePopUp(false);\n  };\n  const handleOptionChange = value => {\n    // setSelectedOption(value);\n    debugger;\n    // Set the current question for the selected option type\n    updateQuestion(selectedOption, questions[selectedOption] || '');\n    setSelectedOption(value);\n  };\n  const handleTextChange = (index, value) => {\n    const updatedOptions = [...textOptions];\n    updatedOptions[index] = value;\n    setTextOptions(updatedOptions);\n  };\n  const handleImageUrlChange = (index, value) => {\n    // Regular expression to check if the value is a valid URL\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n\n    // Check if the value is a valid URL\n    if (!urlRegex.test(value)) {\n      // Display an error or handle the case where the input is not a valid URL\n      alert('Please enter a valid URL.');\n      return;\n    }\n    const updatedOptions = [...imageOptions];\n    updatedOptions[index] = value;\n    setImageOptions(updatedOptions);\n  };\n  const handleNewTextChange = (index, value) => {\n    const updatedOptions = [...textAndImgTextOptions];\n    updatedOptions[index] = value;\n    setTextAndImgTextOptions(updatedOptions);\n    console.log(\"Mydata\", textAndImgTextOptions);\n  };\n  const handleNewImageChange = (index, value) => {\n    // Regular expression to check if the value is a valid URL\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n\n    // Check if the value is a valid URL\n    if (!urlRegex.test(value)) {\n      // Display an error or handle the case where the input is not a valid URL\n      alert('Please enter a valid URL.');\n      return;\n    }\n    const updatedOptions = [...textAndImgImageOptions];\n    updatedOptions[index] = value;\n    setTextAndImgImageOptions(updatedOptions);\n    console.log(\"MyImagedata\", textAndImgImageOptions);\n  };\n  const handleAddOption = () => {\n    if (selectedOption === 'text' && textOptions.length < 4) {\n      setTextOptions(prevOptions => [...prevOptions, '']);\n    } else if (selectedOption === 'imageURL' && imageOptions.length < 4) {\n      setImageOptions(prevImgOptions => [...prevImgOptions, '']);\n    } else if (selectedOption === 'textandimageURL' && textAndImgOptions.length < 4) {\n      setTextAndImgOptions(prevTextAndImgOptions => [...prevTextAndImgOptions, '']);\n      setTextAndImgTextOptions(prevTextAndImgTextOptions => [...prevTextAndImgTextOptions, '']);\n      setTextAndImgImageOptions(prevTextAndImgImageOptions => [...prevTextAndImgImageOptions, '']);\n    }\n  };\n  const handleCreateNewQuiz = () => {\n    if (newQuiz.length < 4) {\n      setnewQuiz(prevOptions => [...prevOptions, prevOptions.length + 1]);\n    }\n  };\n  const renderOptions = () => {\n    if (selectedOption === 'text') {\n      return textOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.radio,\n          type: \"radio\",\n          name: \"correctOption\",\n          checked: textQuizData.correctOption === option,\n          onChange: () => handleTextRadioChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Text\",\n          className: styles.inputText,\n          value: option,\n          onChange: e => handleTextChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), textOptions.length > 2 && index > 1 && /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          className: styles.deleteIcon,\n          onClick: () => handleTextDelete(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 51\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this));\n    } else if (selectedOption === 'imageURL') {\n      return imageOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.radio,\n          type: \"radio\",\n          name: \"correctOption\",\n          checked: imageQuizData.correctOption === option,\n          onChange: () => handleImageRadioChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Image URL\",\n          className: styles.inputText,\n          value: option,\n          onChange: e => handleImageUrlChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), imageOptions.length > 2 && index > 1 && /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          className: styles.deleteIcon,\n          onClick: () => handleImageDelete(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 52\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this));\n    } else if (selectedOption === 'textandimageURL') {\n      return textAndImgOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textImageButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.radio,\n          type: \"radio\",\n          name: \"correctOption\"\n          // checked={textandImageQuizData.correctOption === option}\n          ,\n          checked: textandImageQuizData.correctOption === textAndImgTextOptions[index],\n          onChange: () => handleTextAndImageRadioChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputTextAndImage,\n          type: \"text\",\n          placeholder: \"Text\",\n          value: textAndImgTextOptions[index],\n          onChange: e => handleNewTextChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputTextAndImage,\n          type: \"text\",\n          placeholder: \"Image URL\",\n          value: textAndImgImageOptions[index] || '',\n          onChange: e => handleNewImageChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), textAndImgOptions.length > 2 && index > 1 && /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          className: styles.deleteIcon,\n          onClick: () => handleTextAndImageDelete(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 57\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this));\n    }\n    return null;\n  };\n\n  // const handleQuizLink = () => {\n  //   setShowQuizLink(true);\n  //   // closePollType();\n  // };\n\n  const handleClosePopUp = flag => {\n    setShowQuizLink(flag);\n    closeQandA();\n  };\n  const handleCreateQuiz = async () => {\n    // Validate question input\n    if (!questions[selectedOption] || !questions[selectedOption].trim()) {\n      // Alert or handle the case where the question input is not filled\n      alert('Please enter a question.');\n      return;\n    }\n\n    // Validate fields based on the selected option type\n    if (selectedOption === 'text') {\n      // Validate text options\n      if (textOptions.some(option => !option.trim())) {\n        // Alert or handle the case where a text option is not filled\n        alert('Please fill in all text options.');\n        return;\n      }\n      // Validate correct option\n      if (!textQuizData.correctOption.trim()) {\n        // Alert or handle the case where the correct option is not selected\n        alert('Please select the correct text option.');\n        return;\n      }\n    } else if (selectedOption === 'imageURL') {\n      // Validate image options\n      if (imageOptions.some(option => !option.trim())) {\n        // Alert or handle the case where an image option is not filled\n        alert('Please fill in all image options.');\n        return;\n      }\n      // Validate correct option\n      if (!imageQuizData.correctOption.trim()) {\n        // Alert or handle the case where the correct option is not selected\n        alert('Please select the correct image option.');\n        return;\n      }\n    } else if (selectedOption === 'textandimageURL') {\n      // Validate text and image options\n      if (textAndImgTextOptions.some(option => !option.trim()) || textAndImgImageOptions.some(option => !option.trim())) {\n        // Alert or handle the case where a text or image option is not filled\n        alert('Please fill in all text and image options.');\n        return;\n      }\n      // Validate correct option\n      if (!textandImageQuizData.correctOption.trim()) {\n        // Alert or handle the case where the correct option is not selected\n        alert('Please select the correct text and image option.');\n        return;\n      }\n    }\n    const currentDateAndTime = new Date();\n    debugger;\n    const finalQuizCreatedData = {\n      quizName: sendQuizName,\n      typeText: 'text',\n      questionText: questions.text,\n      optionsText: textOptions,\n      correctOptionText: textQuizData.correctOption,\n      // timeText: textQuizData.time,\n\n      typeImg: 'imageURL',\n      questionImg: questions.imageURL,\n      optionsImg: imageOptions,\n      correctOptionImg: imageQuizData.correctOption,\n      // timeImg: imageQuizData.time,\n\n      typeTxtImg: 'textandimageURL',\n      questionTxtImg: questions.textandimageURL,\n      optionsTxtImg: textAndImgTextOptions,\n      optionsImageTxtImg: textAndImgImageOptions,\n      correctOptionTxtImg: textandImageQuizData.correctOption,\n      // timeTxtImg: textandImageQuizData.time,\n\n      currentDateAndTime: currentDateAndTime.toISOString(),\n      // Add current date and time\n\n      totalTime: totalTime.newTime\n    };\n    // setCreatedQuizData((prevData) => [...prevData, finalQuizCreatedData]); // Append to the existing array\n    console.log(\"finalQuizCreatedData\", finalQuizCreatedData);\n\n    // Call the API directly with the single object\n    try {\n      const response = await axios.post(\"http://localhost:4747/api/create/quiz\", finalQuizCreatedData);\n      console.log(\"Api Response\", response.data);\n    } catch (error) {\n      console.error('Error posting data to API:', error);\n    }\n    setQuestions({\n      text: \"\",\n      imageURL: \"\",\n      textandimageURL: \"\"\n    });\n    setTextOptions([\"\", \"\"]);\n    setImageOptions([\"\", \"\"]);\n    setTextQuizData({\n      quest: \"\",\n      options: [\"\", \"\"],\n      correctOption: \"\",\n      time: 0\n    });\n    setImageQuizData({\n      quest: \"\",\n      options: [\"\", \"\"],\n      correctOption: \"\",\n      time: 0\n    });\n    setTextandImageQuizData({\n      quest: \"\",\n      options: [\"\", \"\"],\n      optionsImage: [\"\", \"\"],\n      correctOption: \"\",\n      time: 0\n    });\n    // setTextAndImgTextOptions([\"\", \"\"]);\n\n    // setTextAndImgImageOptions([\"\", \"\"]);\n    setTextAndImgTextOptions(new Array(textAndImgOptions.length).fill(\"\"));\n    setTextAndImgImageOptions(new Array(textAndImgOptions.length).fill(\"\"));\n    setShowQuizLink(true);\n  };\n  const handleDeleteQuiz = index => {\n    let updatedNewQuiz = [...newQuiz];\n    updatedNewQuiz.splice(index, 1);\n    setnewQuiz(updatedNewQuiz);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.parent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.addButton,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.upperButton,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), newQuiz.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                children: item + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this), index > -1 && /*#__PURE__*/_jsxDEV(CloseIcon, {\n                className: styles.closeIcon,\n                onClick: () => handleDeleteQuiz(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this)), newQuiz.length < 4 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.addQuestion,\n              onClick: handleCreateNewQuiz,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Max 5 questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputParent,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            placeholder: \"QuestionAndAnswer\",\n            name: \"question\",\n            value: questions[selectedOption] || '',\n            onChange: e => {\n              // Update the question for the currently selected option type\n              updateQuestion(selectedOption, e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Option Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.radio,\n            type: \"radio\",\n            value: \"text\",\n            checked: selectedOption === 'text',\n            onChange: () => handleOptionChange('text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.radio,\n            type: \"radio\",\n            value: \"imageURL\",\n            checked: selectedOption === 'imageURL',\n            onChange: () => handleOptionChange('imageURL')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.radio,\n            type: \"radio\",\n            value: \"textandimageURL\",\n            checked: selectedOption === 'textandimageURL',\n            onChange: () => handleOptionChange('textandimageURL')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Text and Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.typeSelectContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.childOneContainer,\n            children: [renderOptions(), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.subChildContainer,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddOption,\n                children: \"Add option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.childTwoContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTimer(0),\n              children: \"Off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTimer(5),\n              children: \"5 sec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTimer(10),\n              children: \"10 sec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.cancelButton,\n            onClick: closeQandA,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.createButton,\n            onClick: handleCreateQuiz,\n            children: \"Create Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), showQuizLink && /*#__PURE__*/_jsxDEV(QuizLinkPopUp, {\n      closePopUp: handleClosePopUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n}\n_s(QandAnsPopUp, \"eVGgfrw2VDgJkBcSGbLTGvWoSRI=\");\n_c = QandAnsPopUp;\nexport default QandAnsPopUp;\nvar _c;\n$RefreshReg$(_c, \"QandAnsPopUp\");","map":{"version":3,"names":["React","useEffect","useState","styles","DeleteForeverIcon","CloseIcon","QuizLinkPopUp","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","QandAnsPopUp","closePopUp","sendQuizName","_s","selectedOption","setSelectedOption","textOptions","setTextOptions","imageOptions","setImageOptions","textAndImgOptions","setTextAndImgOptions","newQuiz","setnewQuiz","showQuizLink","setShowQuizLink","textAndImgTextOptions","setTextAndImgTextOptions","textAndImgImageOptions","setTextAndImgImageOptions","questions","setQuestions","text","imageURL","textandimageURL","updateQuestion","option","value","prevQuestions","totalTime","setTotalTime","newTime","textQuizData","setTextQuizData","quest","options","correctOption","imageQuizData","setImageQuizData","textandImageQuizData","setTextandImageQuizData","optionsImage","handleTextDelete","index","updatedOptions","splice","handleImageDelete","updatedOption","handleTextAndImageDelete","updatedTextOption","updatedImageOption","handleTimer","sec","console","log","warn","handleTextRadioChange","handleImageRadioChange","handleTextAndImageRadioChange","closeQandA","handleOptionChange","handleTextChange","handleImageUrlChange","urlRegex","test","alert","handleNewTextChange","handleNewImageChange","handleAddOption","length","prevOptions","prevImgOptions","prevTextAndImgOptions","prevTextAndImgTextOptions","prevTextAndImgImageOptions","handleCreateNewQuiz","renderOptions","map","children","className","radio","type","name","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","inputText","e","target","deleteIcon","onClick","textImageButtons","inputTextAndImage","handleClosePopUp","flag","handleCreateQuiz","trim","some","currentDateAndTime","Date","finalQuizCreatedData","quizName","typeText","questionText","optionsText","correctOptionText","typeImg","questionImg","optionsImg","correctOptionImg","typeTxtImg","questionTxtImg","optionsTxtImg","optionsImageTxtImg","correctOptionTxtImg","toISOString","response","post","data","error","time","Array","fill","handleDeleteQuiz","updatedNewQuiz","overlay","parent","addButton","upperButton","item","closeIcon","addQuestion","inputParent","input","buttonContainer","typeSelectContainer","childOneContainer","subChildContainer","childTwoContainer","cancelButton","createButton","_c","$RefreshReg$"],"sources":["E:/cuvette-quizz-app/cuvette-frontend-quiz-app/src/CreateQuiz/QandAnsType/QandAnsPopUp.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from '../QandAnsType/Style.module.css';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport QuizLinkPopUp from '../QuizLink/QuizLinkPopUp';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction QandAnsPopUp({ closePopUp, sendQuizName }) {\r\n\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [textOptions, setTextOptions] = useState(['', '']);\r\n  const [imageOptions, setImageOptions] = useState(['', '']);\r\n  const [textAndImgOptions, setTextAndImgOptions] = useState(['', '']);\r\n  const [newQuiz, setnewQuiz] = useState([]);\r\n  const [showQuizLink, setShowQuizLink] = useState(false);\r\n\r\n  const [textAndImgTextOptions, setTextAndImgTextOptions] = useState(['', '']);\r\n  const [textAndImgImageOptions, setTextAndImgImageOptions] = useState(['', '']);\r\n\r\n\r\n  // const [myNewData, setMyNewData] = useState(['', '']);\r\n\r\n\r\n  const [questions, setQuestions] = useState({\r\n    text: '',\r\n    imageURL: '',\r\n    textandimageURL: '',\r\n  });\r\n\r\n  // const [createdQuizData, setCreatedQuizData] = useState([]);\r\n\r\n  const updateQuestion = (option, value) => {\r\n    setQuestions((prevQuestions) => ({\r\n      ...prevQuestions,\r\n      [option]: value,\r\n    }));\r\n  };\r\n\r\n  ///////-------FOR TIME------------\r\n\r\n  const [totalTime, setTotalTime] = useState({\r\n    newTime:0\r\n  });\r\n\r\n  ///////-------FOR TIME------------\r\n\r\n  const [textQuizData, setTextQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    // time: 0,\r\n  });\r\n\r\n\r\n  const [imageQuizData, setImageQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    // time: 0,\r\n  });\r\n\r\n\r\n  const [textandImageQuizData, setTextandImageQuizData] = useState({\r\n    quest: '',\r\n    options: ['', ''],\r\n    optionsImage: ['', ''],\r\n    correctOption: '', // Rename to correctOption\r\n    // time: 0,\r\n  });\r\n\r\n\r\n  const handleTextDelete = (index) => {\r\n    let updatedOptions = [...textOptions];\r\n    updatedOptions.splice(index, 1);\r\n    setTextOptions(updatedOptions);\r\n  }\r\n\r\n\r\n  const handleImageDelete = (index) => {\r\n    let updatedOption = [...imageOptions];\r\n    updatedOption.splice(index, 1);\r\n    setImageOptions(updatedOption);\r\n  }\r\n\r\n\r\n  const handleTextAndImageDelete = (index) => {\r\n    let updatedOption = [...textAndImgOptions];\r\n    let updatedTextOption = [...textAndImgTextOptions];\r\n    let updatedImageOption = [...textAndImgImageOptions];\r\n\r\n\r\n    updatedOption.splice(index, 1);\r\n    updatedTextOption.splice(index, 1);\r\n    updatedImageOption.splice(index, 1);\r\n\r\n\r\n    setTextAndImgOptions(updatedOption);\r\n    setTextAndImgTextOptions(updatedTextOption);\r\n    setTextAndImgImageOptions(updatedImageOption);\r\n  }\r\n\r\n\r\n  // const handleTimer = (sec) => {\r\n  //   // Check the selected option and update the corresponding state\r\n  //   switch (selectedOption) {\r\n  //     case 'text':\r\n  //       setTextQuizData({ ...textQuizData, time: sec });\r\n  //       console.log(\"Selected time for textQuizData:\", sec);\r\n  //       break;\r\n  //     case 'imageURL':\r\n  //       setImageQuizData({ ...imageQuizData, time: sec });\r\n  //       break;\r\n  //     case 'textandimageURL':\r\n  //       setTextandImageQuizData({ ...textandImageQuizData, time: sec });\r\n  //       break;\r\n  //     default:\r\n  //       console.warn(`Unhandled selectedOption: ${selectedOption}`);\r\n  //       // You can throw an error, log a warning, or set a default behavior here\r\n  //       break;\r\n  //   }\r\n  // }\r\n\r\n\r\n// ======================= IN TRIAL FOR TIME START\r\n\r\nconst handleTimer = (sec) => {\r\n  // Check the selected option and update the corresponding state\r\n  switch (selectedOption) {\r\n    case 'text':\r\n      setTotalTime({ ...totalTime, newTime: sec });\r\n      console.log(\"Selected time for textQuizData:\", sec);\r\n      break;\r\n    case 'imageURL':\r\n      setTotalTime({ ...totalTime, newTime: sec });\r\n      break;\r\n    case 'textandimageURL':\r\n      setTotalTime({ ...totalTime, newTime: sec });\r\n      break;\r\n    default:\r\n      console.warn(`Unhandled selectedOption: ${selectedOption}`);\r\n      // You can throw an error, log a warning, or set a default behavior here\r\n      break;\r\n  }\r\n}\r\n\r\n// ====================== IN TRIAL FOR TIME START\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleTextRadioChange = (index) => {\r\n    setTextQuizData({ ...textQuizData, correctOption: textOptions[index] });\r\n    console.log(\"kk\", textQuizData);\r\n  };\r\n\r\n\r\n  const handleImageRadioChange = (index) => {\r\n    setImageQuizData({ ...imageQuizData, correctOption: imageOptions[index] });\r\n    console.log(\"kk\", imageQuizData);\r\n  };\r\n\r\n\r\n  const handleTextAndImageRadioChange = (index) => {\r\n\r\n\r\n    setTextandImageQuizData({ ...textandImageQuizData, correctOption: textAndImgTextOptions[index] })\r\n    console.log(\"Selected value:\", textandImageQuizData);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"Updated textQuizData:\", textQuizData);\r\n    console.log(\"Updated imageQuizData:\", imageQuizData);\r\n    console.log(\"Updated textandImageQuizData:\", textandImageQuizData);\r\n  }, [textQuizData, imageQuizData, textandImageQuizData])\r\n\r\n\r\n\r\n\r\n  const closeQandA = () => {\r\n    closePopUp(false);\r\n  };\r\n\r\n\r\n  const handleOptionChange = (value) => {\r\n    // setSelectedOption(value);\r\n    debugger\r\n    // Set the current question for the selected option type\r\n    updateQuestion(selectedOption, questions[selectedOption] || '');\r\n\r\n    setSelectedOption(value);\r\n  };\r\n\r\n\r\n  const handleTextChange = (index, value) => {\r\n    const updatedOptions = [...textOptions];\r\n    updatedOptions[index] = value;\r\n    setTextOptions(updatedOptions);\r\n  };\r\n\r\n\r\n  const handleImageUrlChange = (index, value) => {\r\n\r\n    // Regular expression to check if the value is a valid URL\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\n    // Check if the value is a valid URL\r\n    if (!urlRegex.test(value)) {\r\n      // Display an error or handle the case where the input is not a valid URL\r\n      alert('Please enter a valid URL.');\r\n      return;\r\n    }\r\n\r\n    const updatedOptions = [...imageOptions];\r\n    updatedOptions[index] = value;\r\n    setImageOptions(updatedOptions);\r\n  };\r\n\r\n  const handleNewTextChange = (index, value) => {\r\n    const updatedOptions = [...textAndImgTextOptions];\r\n    updatedOptions[index] = value;\r\n    setTextAndImgTextOptions(updatedOptions);\r\n    console.log(\"Mydata\", textAndImgTextOptions);\r\n  };\r\n\r\n\r\n  const handleNewImageChange = (index, value) => {\r\n\r\n    // Regular expression to check if the value is a valid URL\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\n    // Check if the value is a valid URL\r\n    if (!urlRegex.test(value)) {\r\n      // Display an error or handle the case where the input is not a valid URL\r\n      alert('Please enter a valid URL.');\r\n      return;\r\n    }\r\n\r\n    const updatedOptions = [...textAndImgImageOptions];\r\n    updatedOptions[index] = value;\r\n    setTextAndImgImageOptions(updatedOptions);\r\n    console.log(\"MyImagedata\", textAndImgImageOptions);\r\n\r\n\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    if (selectedOption === 'text' && textOptions.length < 4) {\r\n      setTextOptions((prevOptions) => [...prevOptions, '']);\r\n    }\r\n    else if (selectedOption === 'imageURL' && imageOptions.length < 4) {\r\n      setImageOptions((prevImgOptions) => [...prevImgOptions, '']);\r\n    } else if (selectedOption === 'textandimageURL' && textAndImgOptions.length < 4) {\r\n      setTextAndImgOptions((prevTextAndImgOptions) => [...prevTextAndImgOptions, '']);\r\n      setTextAndImgTextOptions((prevTextAndImgTextOptions) => [...prevTextAndImgTextOptions, '']);\r\n      setTextAndImgImageOptions((prevTextAndImgImageOptions) => [...prevTextAndImgImageOptions, '']);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCreateNewQuiz = () => {\r\n    if (newQuiz.length < 4) {\r\n      setnewQuiz((prevOptions) => [...prevOptions, prevOptions.length + 1]);\r\n    }\r\n  };\r\n\r\n\r\n  const renderOptions = () => {\r\n    if (selectedOption === 'text') {\r\n      return textOptions.map((option, index) => (\r\n        <div key={index}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={textQuizData.correctOption === option}\r\n            onChange={() => handleTextRadioChange(index)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Text\"\r\n            className={styles.inputText}\r\n            value={option}\r\n            onChange={(e) => handleTextChange(index, e.target.value)}\r\n          />\r\n          {textOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleTextDelete(index)} />}\r\n        </div>\r\n      ));\r\n    } else if (selectedOption === 'imageURL') {\r\n      return imageOptions.map((option, index) => (\r\n        <div key={index}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            checked={imageQuizData.correctOption === option}\r\n            onChange={() => handleImageRadioChange(index)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Image URL\"\r\n            className={styles.inputText}\r\n            value={option}\r\n            onChange={(e) => handleImageUrlChange(index, e.target.value)}\r\n          />\r\n          {imageOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleImageDelete(index)} />}\r\n        </div>\r\n      ));\r\n    } else if (selectedOption === 'textandimageURL') {\r\n      return textAndImgOptions.map((option, index) => (\r\n        <div key={index} className={styles.textImageButtons}>\r\n          <input\r\n            className={styles.radio}\r\n            type=\"radio\"\r\n            name=\"correctOption\"\r\n            // checked={textandImageQuizData.correctOption === option}\r\n            checked={textandImageQuizData.correctOption === textAndImgTextOptions[index]}\r\n            onChange={() => handleTextAndImageRadioChange(index)}\r\n          />\r\n          <input\r\n            className={styles.inputTextAndImage}\r\n            type=\"text\"\r\n            placeholder=\"Text\"\r\n            value={textAndImgTextOptions[index]}\r\n            onChange={(e) => handleNewTextChange(index, e.target.value)}\r\n          />\r\n\r\n\r\n          <input\r\n            className={styles.inputTextAndImage}\r\n            type=\"text\"\r\n            placeholder=\"Image URL\"\r\n            value={textAndImgImageOptions[index] || ''}\r\n            onChange={(e) => handleNewImageChange(index, e.target.value)}\r\n          />\r\n\r\n\r\n          {textAndImgOptions.length > 2 && index > 1 && <DeleteForeverIcon className={styles.deleteIcon} onClick={() => handleTextAndImageDelete(index)} />}\r\n        </div>\r\n      ));\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  // const handleQuizLink = () => {\r\n  //   setShowQuizLink(true);\r\n  //   // closePollType();\r\n  // };\r\n\r\n\r\n  const handleClosePopUp = (flag) => {\r\n    setShowQuizLink(flag);\r\n    closeQandA();\r\n  };\r\n\r\n  const handleCreateQuiz = async () => {\r\n\r\n    // Validate question input\r\n    if (!questions[selectedOption] || !questions[selectedOption].trim()) {\r\n      // Alert or handle the case where the question input is not filled\r\n      alert('Please enter a question.');\r\n      return;\r\n    }\r\n\r\n    // Validate fields based on the selected option type\r\n    if (selectedOption === 'text') {\r\n      // Validate text options\r\n      if (textOptions.some(option => !option.trim())) {\r\n        // Alert or handle the case where a text option is not filled\r\n        alert('Please fill in all text options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!textQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct text option.');\r\n        return;\r\n      }\r\n    } else if (selectedOption === 'imageURL') {\r\n      // Validate image options\r\n      if (imageOptions.some(option => !option.trim())) {\r\n        // Alert or handle the case where an image option is not filled\r\n        alert('Please fill in all image options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!imageQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct image option.');\r\n        return;\r\n      }\r\n    } else if (selectedOption === 'textandimageURL') {\r\n      // Validate text and image options\r\n      if (\r\n        textAndImgTextOptions.some(option => !option.trim()) ||\r\n        textAndImgImageOptions.some(option => !option.trim())\r\n      ) {\r\n        // Alert or handle the case where a text or image option is not filled\r\n        alert('Please fill in all text and image options.');\r\n        return;\r\n      }\r\n      // Validate correct option\r\n      if (!textandImageQuizData.correctOption.trim()) {\r\n        // Alert or handle the case where the correct option is not selected\r\n        alert('Please select the correct text and image option.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    const currentDateAndTime = new Date();\r\n\r\n    debugger\r\n    const finalQuizCreatedData = {\r\n      quizName: sendQuizName,\r\n\r\n      typeText: 'text',\r\n      questionText: questions.text,\r\n      optionsText: textOptions,\r\n      correctOptionText: textQuizData.correctOption,\r\n      // timeText: textQuizData.time,\r\n\r\n      typeImg: 'imageURL',\r\n      questionImg: questions.imageURL,\r\n      optionsImg: imageOptions,\r\n      correctOptionImg: imageQuizData.correctOption,\r\n      // timeImg: imageQuizData.time,\r\n\r\n      typeTxtImg: 'textandimageURL',\r\n      questionTxtImg: questions.textandimageURL,\r\n      optionsTxtImg: textAndImgTextOptions,\r\n      optionsImageTxtImg: textAndImgImageOptions,\r\n      correctOptionTxtImg: textandImageQuizData.correctOption,\r\n      // timeTxtImg: textandImageQuizData.time,\r\n\r\n      currentDateAndTime: currentDateAndTime.toISOString(), // Add current date and time\r\n\r\n      totalTime:totalTime.newTime\r\n    }\r\n    // setCreatedQuizData((prevData) => [...prevData, finalQuizCreatedData]); // Append to the existing array\r\n    console.log(\"finalQuizCreatedData\", finalQuizCreatedData);\r\n\r\n\r\n    // Call the API directly with the single object\r\n    try {\r\n      const response = await axios.post(\"http://localhost:4747/api/create/quiz\", finalQuizCreatedData);\r\n\r\n      console.log(\"Api Response\", response.data);\r\n    } catch (error) {\r\n      console.error('Error posting data to API:', error);\r\n    }\r\n\r\n\r\n\r\n\r\n    setQuestions({\r\n      text: \"\",\r\n      imageURL: \"\",\r\n      textandimageURL: \"\"\r\n    });\r\n    setTextOptions([\"\", \"\"]);\r\n    setImageOptions([\"\", \"\"]);\r\n\r\n    setTextQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      time: 0\r\n    });\r\n    setImageQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      time: 0\r\n    });\r\n    setTextandImageQuizData({\r\n      quest: \"\",\r\n      options: [\"\", \"\"],\r\n      optionsImage: [\"\", \"\"],\r\n      correctOption: \"\",\r\n      time: 0\r\n    });\r\n    // setTextAndImgTextOptions([\"\", \"\"]);\r\n\r\n    // setTextAndImgImageOptions([\"\", \"\"]);\r\n    setTextAndImgTextOptions(new Array(textAndImgOptions.length).fill(\"\"));\r\n    setTextAndImgImageOptions(new Array(textAndImgOptions.length).fill(\"\"));\r\n\r\n    setShowQuizLink(true);\r\n\r\n  };\r\n\r\n  const handleDeleteQuiz = (index) => {\r\n    let updatedNewQuiz = [...newQuiz];\r\n    updatedNewQuiz.splice(index, 1);\r\n    setnewQuiz(updatedNewQuiz);\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.overlay}>\r\n        <div className={styles.parent}>\r\n          <div className={styles.addButton}>\r\n            <div className={styles.upperButton}>\r\n\r\n              <button>1</button>\r\n              {newQuiz.map((item, index) => (\r\n                <div key={index} >\r\n                  <button>{item + 1}</button>\r\n                  {index > -1 && (\r\n                    <CloseIcon\r\n                      className={styles.closeIcon}\r\n                      onClick={() => handleDeleteQuiz(index)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n              {newQuiz.length < 4 && (\r\n                <button className={styles.addQuestion} onClick={handleCreateNewQuiz}>\r\n                  +\r\n                </button>\r\n              )}\r\n\r\n            </div>\r\n            <p>Max 5 questions</p>\r\n          </div>\r\n          <div className={styles.inputParent}>\r\n            <input\r\n              className={styles.input}\r\n              placeholder=\"QuestionAndAnswer\"\r\n              name=\"question\"\r\n              value={questions[selectedOption] || ''}\r\n              onChange={(e) => {\r\n                // Update the question for the currently selected option type\r\n                updateQuestion(selectedOption, e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.buttonContainer}>\r\n            <p>Option Type</p>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"text\"\r\n              checked={selectedOption === 'text'}\r\n              onChange={() => handleOptionChange('text')}\r\n            />\r\n            <label>Text</label>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"imageURL\"\r\n              checked={selectedOption === 'imageURL'}\r\n              onChange={() => handleOptionChange('imageURL')}\r\n            />\r\n            <label>Image URL</label>\r\n\r\n\r\n            <input\r\n              className={styles.radio}\r\n              type=\"radio\"\r\n              value=\"textandimageURL\"\r\n              checked={selectedOption === 'textandimageURL'}\r\n              onChange={() => handleOptionChange('textandimageURL')}\r\n            />\r\n            <label>Text and Image URL</label>\r\n          </div>\r\n\r\n\r\n          <div className={styles.typeSelectContainer}>\r\n            <div className={styles.childOneContainer}>\r\n              {renderOptions()}\r\n              <div className={styles.subChildContainer}>\r\n                <button onClick={handleAddOption}>Add option</button>\r\n              </div>\r\n            </div>\r\n            <div className={styles.childTwoContainer}>\r\n              <p>Timer</p>\r\n              <button onClick={() => handleTimer(0)}>Off</button>\r\n              <button onClick={() => handleTimer(5)}>5 sec</button>\r\n              <button onClick={() => handleTimer(10)}>10 sec</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.buttonContainer}>\r\n            <button className={styles.cancelButton} onClick={closeQandA}>\r\n              Cancel\r\n            </button>\r\n            <button className={styles.createButton} onClick={handleCreateQuiz}>\r\n              Create Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showQuizLink && <QuizLinkPopUp closePopUp={handleClosePopUp} />}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default QandAnsPopUp;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}