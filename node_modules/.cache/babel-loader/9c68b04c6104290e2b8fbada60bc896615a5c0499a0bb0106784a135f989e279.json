{"ast":null,"code":"var _jsxFileName = \"E:\\\\cuvette-quizz-app\\\\cuvette-frontend-quiz-app\\\\src\\\\QuizInterface\\\\QuizPollType\\\\QuizPollTypeText\\\\PollText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from '../QuizPollTypeText/Style.module.css';\nimport { useParams } from 'react-router-dom'; // Import useParams from react-router-dom\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PollText = () => {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  // const [timer, setTimer] = useState(0);\n  const [displayType, setDisplayType] = useState('text'); // 'text', 'image', 'textImage'\n  const [error, setError] = useState('');\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [displayTypes, setDisplayTypes] = useState(['text', 'imageURL', 'textandimageURL']);\n  // const [currentDisplayIndex, setCurrentDisplayIndex] = useState(0);\n  // const [allCasesOver, setAllCasesOver] = useState(false);\n\n  const [textPollOne, setTextPollOne] = useState(0);\n  const [textPollTwo, setTextPollTwo] = useState(0);\n  const [textPollThree, setTextPollThree] = useState(0);\n  const [textPollFour, setTextPollFour] = useState(0);\n  const [imgPollOne, setImgPollOne] = useState(0);\n  const [imgPollTwo, setImgPollTwo] = useState(0);\n  const [imgPollThree, setImgPollThree] = useState(0);\n  const [imgPollFour, setImgPollFour] = useState(0);\n  const [textImgPollOne, setTextImgPollOne] = useState(0);\n  const [textImgPollTwo, setTextImgPollTwo] = useState(0);\n  const [textImgPollThree, setTextImgPollThree] = useState(0);\n  const [textImgPollFour, setTextImgPollFour] = useState(0);\n  const [optionClicked, setOptionClicked] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  useEffect(() => {\n    const fetchQuizData = async () => {\n      try {\n        debugger;\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/create/poll/${id}`);\n        console.log('API Response:', response.data);\n        setQuizData(response.data);\n        setLoading(false);\n        // setTimer(response.data[currentIndex]?.time || 0);\n      } catch (error) {\n        console.error('Error fetching quiz data:', error);\n        setError('Error fetching quiz data');\n        setLoading(false);\n      }\n    };\n    fetchQuizData();\n  }, [id]);\n  const handleOptionClick = optionsText => {\n    setSelectedOption(optionsText);\n  };\n  const handleNext = () => {\n    debugger;\n    switch (displayType) {\n      case 'text':\n        switch (selectedOption) {\n          case quizData.optionsText[0]:\n            setTextPollOne(prevCount => {\n              const newCount = prevCount + 1;\n              console.log(\"textPollOne\", newCount);\n              return newCount;\n            });\n            break;\n          case quizData.optionsText[1]:\n            setTextPollTwo(prevCount => {\n              const newCount = prevCount + 1;\n              console.log(\"textPollTwo\", newCount);\n              return newCount;\n            });\n            break;\n          case quizData.optionsText[2]:\n            setTextPollThree(prevCount => {\n              const newCount = prevCount + 1;\n              console.log(\"textPollThree\", newCount);\n              return newCount;\n            });\n            break;\n          case quizData.optionsText[3]:\n            setTextPollFour(prevCount => {\n              const newCount = prevCount + 1;\n              console.log(\"textPollFour\", newCount);\n              return newCount;\n            });\n            break;\n          default:\n            break;\n        }\n        break;\n      case 'imageURL':\n        switch (selectedOption) {\n          case quizData.optionsImg[0]:\n            setImgPollOne(prevCount => prevCount + 1);\n            break;\n          case quizData.optionsImg[1]:\n            setImgPollTwo(prevCount => prevCount + 1);\n            break;\n          case quizData.optionsImg[2]:\n            setImgPollThree(prevCount => prevCount + 1);\n            break;\n          case quizData.optionsImg[3]:\n            setImgPollFour(prevCount => prevCount + 1);\n            break;\n          default:\n            break;\n        }\n        break;\n    }\n\n    // Try one \n    setCurrentIndex(prevIndex => {\n      const nextIndex = (prevIndex + 1) % displayTypes.length;\n      setDisplayType(displayTypes[nextIndex]);\n\n      // // Check if all cases are over\n      if (nextIndex === 0) {\n        alert(\"Quiz questions are over!\");\n        // Optionally, you can redirect or perform any other action after showing the alert\n      }\n      return nextIndex;\n    });\n  };\n\n  // useEffect(()=>{\n  //   console.log(\"textPollOne\", textPollOne)\n  // }, [textPollOne])\n\n  const renderContentByType = () => {\n    if (quizData.length === 0) {\n      // Display loading indicator or handle the case when quiz data is not yet available\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 14\n      }, this);\n    }\n    switch (displayType) {\n      case 'text':\n        // Check if quizData.questionText is not empty\n        if (!quizData.questionText) {\n          return null;\n        }\n        return (\n          /*#__PURE__*/\n          // Render text content\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childone,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"01/\", quizData.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this), quizData.questionText && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childthree,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: quizData.questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), quizData.optionsText && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childtwo,\n              children: quizData.optionsText.map((optionsText, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.subChild,\n                onClick: () => handleOptionClick(optionsText),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: optionsText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), quizData.typeText && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childthree,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Type: \", quizData.typeText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        );\n      case 'imageURL':\n        // Check if quizData.questionText is not empty\n        if (!quizData.questionImg) {\n          return null;\n        }\n        return (\n          /*#__PURE__*/\n          // Render image content\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childone,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"01/\", quizData.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 13\n            }, this), quizData.questionImg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childthree,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: quizData.questionImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), quizData.optionsImg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childtwo,\n              children: quizData.optionsImg.map((optionsImg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.subChild,\n                onClick: () => handleOptionClick(optionsImg),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: optionsImg,\n                  alt: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), quizData.typeImg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childthree,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Type: \", quizData.typeImg]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        );\n      case 'textandimageURL':\n        // Check if quizData.questionText is not empty\n        if (!quizData.questionTxtImg) {\n          return null;\n        }\n        return (\n          /*#__PURE__*/\n          // Render text and image content\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childone,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"01/\", quizData.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 13\n            }, this), quizData.questionTxtImg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childthree,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: quizData.questionTxtImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), quizData.optionsTxtImg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childtwoTxtImg,\n              children: quizData.optionsTxtImg.map((optionsTxtImg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.subChildTxtImg,\n                onClick: () => handleOptionClick(optionsTxtImg),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: optionsTxtImg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), quizData.optionsImageTxtImg && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.childtwoImgstyle,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: quizData.optionsImageTxtImg[index],\n                    alt: `Option ${index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), quizData.typeTxtImg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.childthree,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Type: \", quizData.typeTxtImg]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        );\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.parent,\n      children: [renderContentByType(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.childfour,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonNext,\n          onClick: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(PollText, \"aJlmU74jCxw4RSUSOH0XDiB9MWg=\", false, function () {\n  return [useParams];\n});\n_c = PollText;\nexport default PollText;\nvar _c;\n$RefreshReg$(_c, \"PollText\");","map":{"version":3,"names":["React","useState","useEffect","axios","styles","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PollText","_s","quizData","setQuizData","currentIndex","setCurrentIndex","displayType","setDisplayType","error","setError","id","loading","setLoading","displayTypes","setDisplayTypes","textPollOne","setTextPollOne","textPollTwo","setTextPollTwo","textPollThree","setTextPollThree","textPollFour","setTextPollFour","imgPollOne","setImgPollOne","imgPollTwo","setImgPollTwo","imgPollThree","setImgPollThree","imgPollFour","setImgPollFour","textImgPollOne","setTextImgPollOne","textImgPollTwo","setTextImgPollTwo","textImgPollThree","setTextImgPollThree","textImgPollFour","setTextImgPollFour","optionClicked","setOptionClicked","selectedOption","setSelectedOption","fetchQuizData","response","get","process","env","REACT_APP_API_URL","console","log","data","handleOptionClick","optionsText","handleNext","prevCount","newCount","optionsImg","prevIndex","nextIndex","length","alert","renderContentByType","children","fileName","_jsxFileName","lineNumber","columnNumber","questionText","className","childone","childthree","childtwo","map","index","subChild","onClick","typeText","questionImg","src","alt","typeImg","questionTxtImg","optionsTxtImg","childtwoTxtImg","subChildTxtImg","optionsImageTxtImg","childtwoImgstyle","typeTxtImg","parent","childfour","buttonNext","_c","$RefreshReg$"],"sources":["E:/cuvette-quizz-app/cuvette-frontend-quiz-app/src/QuizInterface/QuizPollType/QuizPollTypeText/PollText.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styles from '../QuizPollTypeText/Style.module.css';\r\nimport { useParams } from 'react-router-dom'; // Import useParams from react-router-dom\r\n\r\nconst PollText = () => {\r\n  const [quizData, setQuizData] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  // const [timer, setTimer] = useState(0);\r\n  const [displayType, setDisplayType] = useState('text'); // 'text', 'image', 'textImage'\r\n  const [error, setError] = useState('')\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [displayTypes, setDisplayTypes] = useState(['text', 'imageURL', 'textandimageURL']);\r\n  // const [currentDisplayIndex, setCurrentDisplayIndex] = useState(0);\r\n  // const [allCasesOver, setAllCasesOver] = useState(false);\r\n\r\n  const [textPollOne, setTextPollOne] = useState(0)\r\n  const [textPollTwo, setTextPollTwo] = useState(0)\r\n  const [textPollThree, setTextPollThree] = useState(0)\r\n  const [textPollFour, setTextPollFour] = useState(0)\r\n\r\n  const [imgPollOne, setImgPollOne] = useState(0)\r\n  const [imgPollTwo, setImgPollTwo] = useState(0)\r\n  const [imgPollThree, setImgPollThree] = useState(0)\r\n  const [imgPollFour, setImgPollFour] = useState(0)\r\n\r\n  const [textImgPollOne, setTextImgPollOne] = useState(0)\r\n  const [textImgPollTwo, setTextImgPollTwo] = useState(0)\r\n  const [textImgPollThree, setTextImgPollThree] = useState(0)\r\n  const [textImgPollFour, setTextImgPollFour] = useState(0)\r\n\r\n  const [optionClicked, setOptionClicked] = useState(false);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchQuizData = async () => {\r\n      try {\r\n        debugger\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/create/poll/${id}`);\r\n        console.log('API Response:', response.data);\r\n        setQuizData(response.data);\r\n        setLoading(false);\r\n        // setTimer(response.data[currentIndex]?.time || 0);\r\n      } catch (error) {\r\n        console.error('Error fetching quiz data:', error);\r\n        setError('Error fetching quiz data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [id]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleOptionClick = (optionsText) => {\r\n\r\n    setSelectedOption(optionsText);\r\n\r\n    \r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n\r\ndebugger\r\n\r\nswitch (displayType) {\r\n  case 'text':\r\n    switch (selectedOption) {\r\n      case quizData.optionsText[0]:\r\n        setTextPollOne((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          console.log(\"textPollOne\", newCount);\r\n          return newCount;\r\n        });\r\n        break;\r\n      case quizData.optionsText[1]:\r\n        setTextPollTwo((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          console.log(\"textPollTwo\", newCount);\r\n          return newCount;\r\n        });\r\n        break;\r\n      case quizData.optionsText[2]:\r\n        setTextPollThree((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          console.log(\"textPollThree\", newCount);\r\n          return newCount;\r\n        });\r\n        break;\r\n      case quizData.optionsText[3]:\r\n        setTextPollFour((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          console.log(\"textPollFour\", newCount);\r\n          return newCount;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    break;\r\n\r\n\r\n\r\n    case 'imageURL':\r\n      switch (selectedOption) {\r\n        case quizData.optionsImg[0]:\r\n          setImgPollOne((prevCount) => prevCount + 1);\r\n          break;\r\n        case quizData.optionsImg[1]:\r\n          setImgPollTwo((prevCount) => prevCount + 1);\r\n          break;\r\n        case quizData.optionsImg[2]:\r\n          setImgPollThree((prevCount) => prevCount + 1);\r\n          break;\r\n        case quizData.optionsImg[3]:\r\n          setImgPollFour((prevCount) => prevCount + 1);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      break;\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Try one \r\n    setCurrentIndex((prevIndex) => {\r\n      const nextIndex = (prevIndex + 1) % displayTypes.length;\r\n      setDisplayType(displayTypes[nextIndex]);\r\n\r\n      // // Check if all cases are over\r\n      if (nextIndex === 0) {\r\n        alert(\"Quiz questions are over!\");\r\n        // Optionally, you can redirect or perform any other action after showing the alert\r\n      }\r\n      return nextIndex;\r\n    });\r\n  };\r\n\r\n\r\n\r\n// useEffect(()=>{\r\n//   console.log(\"textPollOne\", textPollOne)\r\n// }, [textPollOne])\r\n\r\n\r\n  const renderContentByType = () => {\r\n\r\n    if (quizData.length === 0) {\r\n      // Display loading indicator or handle the case when quiz data is not yet available\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    switch (displayType) {\r\n      case 'text':\r\n        // Check if quizData.questionText is not empty\r\n        if (!quizData.questionText) {\r\n          return null;\r\n        }\r\n\r\n        return (\r\n          // Render text content\r\n          <>\r\n            <div className={styles.childone}>\r\n              <h3>01/{quizData.length}</h3>\r\n            </div>\r\n            {quizData.questionText && (\r\n              <div className={styles.childthree}>\r\n                <h2>{quizData.questionText}</h2>\r\n              </div>\r\n            )}\r\n            {quizData.optionsText && (\r\n              <div className={styles.childtwo}>\r\n                {quizData.optionsText.map((optionsText, index) => (\r\n                  <div key={index} className={styles.subChild}   onClick={() => handleOptionClick(optionsText)}>\r\n                    <div>\r\n                      <p>{optionsText}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {quizData.typeText && (\r\n              <div className={styles.childthree}>\r\n                <p>Type: {quizData.typeText}</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      case 'imageURL':\r\n        // Check if quizData.questionText is not empty\r\n        if (!quizData.questionImg) {\r\n          return null;\r\n        }\r\n\r\n        return (\r\n          // Render image content\r\n          <>\r\n            <div className={styles.childone}>\r\n              <h3>01/{quizData.length}</h3>\r\n              {/* <h2>{timer > 0 ? `00:${timer}s` : \"Time's up!\"}</h2> */}\r\n            </div>\r\n\r\n            {quizData.questionImg && (\r\n              <div className={styles.childthree}>\r\n                <h2>{quizData.questionImg}</h2>\r\n              </div>\r\n            )}\r\n\r\n\r\n            {quizData.optionsImg && (\r\n              <div className={styles.childtwo}>\r\n                {quizData.optionsImg.map((optionsImg, index) => (\r\n                  <div key={index} className={styles.subChild} onClick={() => handleOptionClick(optionsImg)}>\r\n                    {/* <div> */}\r\n                      <img src={optionsImg} alt={index + 1} />\r\n                    {/* </div> */}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {quizData.typeImg && (\r\n              <div className={styles.childthree}>\r\n                <p>Type: {quizData.typeImg}</p>\r\n              </div>\r\n            )}\r\n\r\n\r\n          </>\r\n        );\r\n      case 'textandimageURL':\r\n        // Check if quizData.questionText is not empty\r\n        if (!quizData.questionTxtImg) {\r\n          return null;\r\n        }\r\n        return (\r\n          // Render text and image content\r\n          <>\r\n\r\n            <div className={styles.childone}>\r\n              <h3>01/{quizData.length}</h3>\r\n              {/* <h2>{timer > 0 ? `00:${timer}s` : \"Time's up!\"}</h2> */}\r\n            </div>\r\n\r\n            {quizData.questionTxtImg && (\r\n              <div className={styles.childthree}>\r\n                <h2>{quizData.questionTxtImg}</h2>\r\n              </div>\r\n            )}\r\n            {quizData.optionsTxtImg && (\r\n              <div className={styles.childtwoTxtImg}>\r\n                {quizData.optionsTxtImg.map((optionsTxtImg, index) => (\r\n                  <div key={index} className={styles.subChildTxtImg}onClick={() => handleOptionClick(optionsTxtImg)}>\r\n                    <div>\r\n                      <p>{optionsTxtImg}</p>\r\n                    </div>\r\n                    {quizData.optionsImageTxtImg && (\r\n                      <div key={index} className={styles.childtwoImgstyle}>\r\n                        <img src={quizData.optionsImageTxtImg[index]} alt={`Option ${index + 1}`} />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {quizData.typeTxtImg && (\r\n              <div className={styles.childthree}>\r\n                <p>Type: {quizData.typeTxtImg}</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return <>\r\n    <div className={styles.parent}>\r\n\r\n      {renderContentByType()}\r\n\r\n      <div className={styles.childfour}>\r\n        <button className={styles.buttonNext} onClick={handleNext}>\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </>;\r\n};\r\n\r\nexport default PollText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}