{"ast":null,"code":"import React,{useState,useEffect}from'react';import styles from'../QuizeQandAnsTextandImage/Style.module.css';import axios from'axios';import quizCompletedImage from'../../../assets/images/congrats.png';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function QuizTextandImage(){const[quizData,setQuizData]=useState(null);const[timer,setTimer]=useState(0);useEffect(()=>{const apiUrl='http://localhost:4747/api/create/quiz';const fetchData=async()=>{try{const response=await axios.get(apiUrl);console.log(\"Get respones\",response);setQuizData(response.data);console.log(\"ooooooo\",quizData);const initialTimerValue=response.data[0]&&response.data[0].timeText;setTimer(initialTimerValue||0);}catch(error){console.error('Error fetching quiz data:',error);}};fetchData();},[]);// Empty dependency array means the effect runs once after the initial render\nuseEffect(()=>{if(timer>0){const intervalId=setInterval(()=>{setTimer(prevTimer=>prevTimer-1);},1000);// Clear the interval when timer reaches 0\nif(timer===0){clearInterval(intervalId);}// Clear the interval on component unmount\nreturn()=>clearInterval(intervalId);}},[timer]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:styles.parent,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.childone,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"01/04\"}),/*#__PURE__*/_jsx(\"h2\",{children:timer>0?`00:${timer}s`:'Time\\'s up!'})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.childthree,children:/*#__PURE__*/_jsx(\"h2\",{children:quizData&&quizData[2]&&quizData[2].questionTxtImg})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.childtwo,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.subChild,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"dISPLAY OPTION TEXT\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:quizCompletedImage,alt:\"Quiz Completed\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.subChild,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"dISPLAY OPTION TEXT\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:quizCompletedImage,alt:\"Quiz Completed\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.childtwo,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.subChild,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"dISPLAY OPTION TEXT\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:quizCompletedImage,alt:\"Quiz Completed\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.subChild,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"dISPLAY OPTION TEXT\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:quizCompletedImage,alt:\"Quiz Completed\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.childfour,children:/*#__PURE__*/_jsx(\"button\",{className:styles.buttonNext,children:\"Next\"})})]})});}export default QuizTextandImage;","map":{"version":3,"names":["React","useState","useEffect","styles","axios","quizCompletedImage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuizTextandImage","quizData","setQuizData","timer","setTimer","apiUrl","fetchData","response","get","console","log","data","initialTimerValue","timeText","error","intervalId","setInterval","prevTimer","clearInterval","children","className","parent","childone","childthree","questionTxtImg","childtwo","subChild","src","alt","childfour","buttonNext"],"sources":["E:/cuvette-quizz-app/cuvette-frontend-quiz-app/src/QuizInterface/QuizeQandAns/QuizeQandAnsTextandImage/QuizTextandImage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styles from '../QuizeQandAnsTextandImage/Style.module.css';\r\nimport axios from 'axios';\r\nimport quizCompletedImage from '../../../assets/images/congrats.png';\r\n\r\nfunction QuizTextandImage() {\r\n\r\n    const [quizData, setQuizData] = useState(null);\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const apiUrl = 'http://localhost:4747/api/create/quiz';\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(apiUrl);\r\n                console.log(\"Get respones\", response)\r\n                setQuizData(response.data);\r\n                console.log(\"ooooooo\", quizData)\r\n\r\n\r\n                const initialTimerValue = response.data[0] && response.data[0].timeText;\r\n                setTimer(initialTimerValue || 0);\r\n            } catch (error) {\r\n                console.error('Error fetching quiz data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // Empty dependency array means the effect runs once after the initial render\r\n\r\n    useEffect(() => {\r\n        if (timer > 0) {\r\n            const intervalId = setInterval(() => {\r\n                setTimer(prevTimer => prevTimer - 1);\r\n            }, 1000);\r\n\r\n            // Clear the interval when timer reaches 0\r\n            if (timer === 0) {\r\n                clearInterval(intervalId);\r\n            }\r\n\r\n            // Clear the interval on component unmount\r\n            return () => clearInterval(intervalId);\r\n        }\r\n    }, [timer]);\r\n    return (\r\n        <>\r\n            <div className={styles.parent}>\r\n                <div className={styles.childone}>\r\n                    <h3>\r\n                        01/04\r\n                    </h3>\r\n                    <h2>\r\n                        {timer > 0 ? `00:${timer}s` : 'Time\\'s up!'}\r\n                    </h2>\r\n                </div>\r\n                <div className={styles.childthree}>\r\n                    <h2>{quizData && quizData[2] && quizData[2].questionTxtImg}</h2>\r\n                </div>\r\n                <div className={styles.childtwo}>\r\n                    <div className={styles.subChild}>\r\n                        <div>\r\n                        <p>dISPLAY OPTION TEXT</p>\r\n                        </div>\r\n                        <div>\r\n                        <img src={quizCompletedImage} alt=\"Quiz Completed\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.subChild}>\r\n                    <div>\r\n                        <p>dISPLAY OPTION TEXT</p>\r\n                        </div>\r\n                        <div>\r\n                        <img src={quizCompletedImage} alt=\"Quiz Completed\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.childtwo}>\r\n                    <div className={styles.subChild}>\r\n                    <div>\r\n                        <p>dISPLAY OPTION TEXT</p>\r\n                        </div>\r\n                        <div>\r\n                        <img src={quizCompletedImage} alt=\"Quiz Completed\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.subChild}>\r\n                    <div>\r\n                        <p>dISPLAY OPTION TEXT</p>\r\n                        </div>\r\n                        <div>\r\n                        <img src={quizCompletedImage} alt=\"Quiz Completed\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n{/* <div className={styles.childtwo}>\r\n                    {quizData && quizData[1] && quizData[1].optionsImg.map((option, index) => (\r\n                        <div key={index} className={styles.subChild}>\r\n                            {quizData[1].typeImg === 'imageURL' ? (\r\n                                <img src={option} alt={`Option ${index + 1}`} />\r\n                            ) : (\r\n                                <p>{option}</p>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n */}\r\n\r\n\r\n\r\n{/* /////////// */}\r\n\r\n\r\n{/* <div className={styles.childtwo}>\r\n  {quizData && quizData[2].map((data, index) => (\r\n    <div key={index} className={styles.subChild}>\r\n      <div>\r\n        <p>{data.optionsTxtImg}</p>\r\n      </div>\r\n      <div>\r\n        <img src={data.optionsImageTxtImg} alt={`Option ${index + 1}`} />\r\n      </div>\r\n    </div>\r\n  ))}\r\n</div> */}\r\n\r\n\r\n                <div className={styles.childfour}>\r\n                    <button className={styles.buttonNext}>Next</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizTextandImage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}